[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto",
    "section": "",
    "text": "openai functions\n\n\n\n\n\n\n\nai\n\n\nruby\n\n\n\n\n\n\n\n\n\n\n\nAug 5, 2023\n\n\n4 min\n\n\n\n\n\n\n\n\n公式\n\n\n\n\n\n\n\nmath\n\n\n\n\n\n\n\n\n\n\n\nAug 3, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\n2進数、連立方程式\n\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJul 30, 2023\n\n\n2 min\n\n\n\n\n\n\n\n\n数学2、指数関数、対数関数、三角関数\n\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJul 23, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\n高校数学、単元リスト\n\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJul 21, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\neth\n\n\n\n\n\n\n\nruby\n\n\ncrypto\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJul 17, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\nBoxcars\n\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\n\n\n\n\n\n\n\n\n\nJul 16, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\nlangchainrb\n\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\n\n\n\n\n\n\n\n\n\nJul 15, 2023\n\n\n1 min\n\n\n\n\n\n\n\n\nrb_prob\n\n\n\n\n\n\n\nruby\n\n\nprobcomp\n\n\ncode\n\n\nai\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n9 min\n\n\n\n\n\n\n\n\nDaru\n\n\n\n\n\n\n\nruby\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n2 min\n\n\n\n\n\n\n\n\nIntroduction to Modeling in Gen\n\n\n\n\n\n\n\njulia\n\n\nprobcomp\n\n\ncode\n\n\nai\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-07-13introductionGen/index.html",
    "href": "posts/2023-07-13introductionGen/index.html",
    "title": "Introduction to Modeling in Gen",
    "section": "",
    "text": "https://www.gen.dev/tutorials/intro-to-modeling/tutorial"
  },
  {
    "objectID": "posts/2023-07-13introductionGen/index.html#bayesian-linear-regressioncrypto",
    "href": "posts/2023-07-13introductionGen/index.html#bayesian-linear-regressioncrypto",
    "title": "Introduction to Modeling in Gen",
    "section": "Bayesian linear regressioncrypto,",
    "text": "Bayesian linear regressioncrypto,\n\n@gen function line_model(xs::Vector{Float64})\n    # We begin by sampling a slope and intercept for the line.\n    # Before we have seen the data, we don't know the values of\n    # these parameters, so we treat them as random choices. The\n    # distributions they are drawn from represent our prior beliefs\n    # about the parameters: in this case, that neither the slope nor the\n    # intercept will be more than a couple points away from 0.\n    slope = ({:slope} ~ normal(0, 1))\n    intercept = ({:intercept} ~ normal(0, 2))\n\n    # We define a function to compute y for a given x\n    function y(x)\n        return slope * x + intercept\n    end\n\n    # Given the slope and intercept, we can sample y coordinates\n    # for each of the x coordinates in our input vector.\n    for (i, x) in enumerate(xs)\n        # Note that we name each random choice in this loop\n        # slightly differently: the first time through,\n        # the name (:y, 1) will be used, then (:y, 2) for\n        # the second point, and so on.\n        ({(:y, i)} ~ normal(y(x), 0.1))\n    end\n\n    # Most of the time, we don't care about the return\n    # value of a model, only the random choices it makes.\n    # It can sometimems be useful to return something\n    # meaningful, however; here, we return the function `y`.\n    return y\nend;\n\n\nxs = [-5., -4., -3., -2., -1., 0., 1., 2., 3., 4., 5.];\n\n\ny = line_model(xs)\n\ny (generic function with 1 method)\n\n\n\ntrace = Gen.simulate(line_model, (xs,));\n\n\nGen.get_args(trace)\n\n([-5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0],)\n\n\n\nfunction render_trace(trace; show_data=true)\n\n    # Pull out xs from the trace\n    xs, = get_args(trace)\n\n    xmin = minimum(xs)\n    xmax = maximum(xs)\n\n    # Pull out the return value, useful for plotting\n    y = get_retval(trace)\n\n    # Draw the line\n    test_xs = collect(range(-5, stop=5, length=1000))\n    fig = plot(test_xs, map(y, test_xs), color=\"black\", alpha=0.5, label=nothing,\n                xlim=(xmin, xmax), ylim=(xmin, xmax))\n\n    if show_data\n        ys = [trace[(:y, i)] for i=1:length(xs)]\n\n        # Plot the data set\n        scatter!(xs, ys, c=\"black\", label=nothing)\n    end\n\n    return fig\nend;\n\n\nrender_trace(trace)\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction grid(renderer::Function, traces)\n    Plots.plot(map(renderer, traces)...)\nend;\n\n\ntraces = [Gen.simulate(line_model, (xs,)) for _=1:12]\ngrid(render_trace, traces)"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html",
    "href": "posts/2023-08-03Math/index.html",
    "title": "公式",
    "section": "",
    "text": "\\[\nax^2+bx+c=0 \\quad (a \\neq 0)\n\\]\n\\[\nx = \\frac{-b \\pm　\\sqrt{b^2 - 4ac}}{2a}\n\\]\n\n\n\n2次方程式\\(ax^2+bx+c=0\\)の二つの解を\\(\\alpha\\), \\(\\beta\\)とするとき, 解と係数の間には次の関係がある。\n\\[\n\\alpha + \\beta = - \\frac{b}{a}, \\quad \\alpha\\beta = \\frac{c}{a}\n\\]\n\n\n\n\\((x + b)(x + d) = x^2 + (b+d)x + bd\\)\n\\((ax + b)(cx + d) = acx^2 + (ad + bc)x + bd\\)\n\\((x+y)^2 = x^2 + 2xy + y^2\\)\n\\((x-y)^2 = x^2 - 2xy + y^2\\)\n\\((x+y)(x-y) = x^2 - y^2\\)\n\\((x+y+z)^3 = x^2 + y^2 + z^2 + 2xy + 2yz +2zx\\)\n\\((x+y)^3= x^3 + 3x^2y + 3xy^2 + y^3\\)\n\\((x-y)^3= x^3 - 3x^2y + 3xy^2 - y^3\\)"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html#次方程式の解の公式",
    "href": "posts/2023-08-03Math/index.html#次方程式の解の公式",
    "title": "公式",
    "section": "",
    "text": "\\[\nax^2+bx+c=0 \\quad (a \\neq 0)\n\\]\n\\[\nx = \\frac{-b \\pm　\\sqrt{b^2 - 4ac}}{2a}\n\\]"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html#解と係数の関係",
    "href": "posts/2023-08-03Math/index.html#解と係数の関係",
    "title": "公式",
    "section": "",
    "text": "2次方程式\\(ax^2+bx+c=0\\)の二つの解を\\(\\alpha\\), \\(\\beta\\)とするとき, 解と係数の間には次の関係がある。\n\\[\n\\alpha + \\beta = - \\frac{b}{a}, \\quad \\alpha\\beta = \\frac{c}{a}\n\\]"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html#乗法の公式",
    "href": "posts/2023-08-03Math/index.html#乗法の公式",
    "title": "公式",
    "section": "",
    "text": "\\((x + b)(x + d) = x^2 + (b+d)x + bd\\)\n\\((ax + b)(cx + d) = acx^2 + (ad + bc)x + bd\\)\n\\((x+y)^2 = x^2 + 2xy + y^2\\)\n\\((x-y)^2 = x^2 - 2xy + y^2\\)\n\\((x+y)(x-y) = x^2 - y^2\\)\n\\((x+y+z)^3 = x^2 + y^2 + z^2 + 2xy + 2yz +2zx\\)\n\\((x+y)^3= x^3 + 3x^2y + 3xy^2 + y^3\\)\n\\((x-y)^3= x^3 - 3x^2y + 3xy^2 - y^3\\)"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html#フーリエ変換",
    "href": "posts/2023-08-03Math/index.html#フーリエ変換",
    "title": "公式",
    "section": "フーリエ変換",
    "text": "フーリエ変換\n\\(\\hat{f}(\\xi) := \\int_{-\\infty}^{\\infty} f(x)e^{- 2\\pi i x \\xi}\\,dx\\)\n\n\\(\\xi\\) は任意の実数\n:= という記号は，左辺を右辺で定義するという意味\n\\(\\int_{}{}\\) は積分記号\n\\(e^{- 2\\pi i x \\xi}\\) は周波数（？）\n\\(dx\\) は瞬間的な変化量"
  },
  {
    "objectID": "posts/2023-08-03Math/index.html#偏微分方程式",
    "href": "posts/2023-08-03Math/index.html#偏微分方程式",
    "title": "公式",
    "section": "偏微分方程式",
    "text": "偏微分方程式\n以下では未知関数 ψ の変数 x に関する偏微分を ψx のように表す： \\[\n\\psi_x := {\\partial \\psi \\over \\partial x},\n\\]\n\\[\n\\psi_{xy} := {\\partial^2 \\psi \\over \\partial y\\, \\partial x}.\n\\]"
  },
  {
    "objectID": "posts/2023-07-16intorductionBoxcars/index.html",
    "href": "posts/2023-07-16intorductionBoxcars/index.html",
    "title": "Boxcars",
    "section": "",
    "text": "https://github.com/BoxcarsAI/boxcars\n\nrequire 'boxcars'\n\ntrue\n\n\n\n# showcase Google Serp search\ns = Boxcars::GoogleSearch.new\ns.run \"what temperature is it in Phoenix?\"\n\nFound SERP answer at [:organic_results, 0, :snippet]\nQuestion: what temperature is it in Phoenix?\nAnswer: {:snippet=&gt;\"Generally sunny. Hot. High 113F. Winds SW at 10 to 15 mph. Humidity18%.\", :url=&gt;\"https://weather.com/weather/tenday/l/Phoenix+AZ?canonicalCityId=2e5ae66bd2b43b15b0bfc4f6a3628b6e13228e32d0a57fb643144293f78ca339\"}\n\n\n{:snippet=&gt;\"Generally sunny. Hot. High 113F. Winds SW at 10 to 15 mph. Humidity18%.\", :url=&gt;\"https://weather.com/weather/tenday/l/Phoenix+AZ?canonicalCityId=2e5ae66bd2b43b15b0bfc4f6a3628b6e13228e32d0a57fb643144293f78ca339\"}\n\n\n\nrequire 'active_support'\n\nengine = Boxcars::Openai.new(max_tokens: 256)\ncalc = Boxcars::Calculator.new(engine: engine)\nputs calc.run \"what is pi to the forth power divided by 22.1?\"\n\n&gt; Entering Calculator#run\nwhat is pi to the forth power divided by 22.1?\nRubyREPL: puts (Math::PI**4) / 22.1\nAnswer: 4.407651178009159\n\n{\"status\":\"ok\",\"answer\":\"4.407651178009159\",\"explanation\":\"Answer: 4.407651178009159\",\"code\":\"puts (Math::PI**4) / 22.1\"}\n&lt; Exiting Calculator#run\n4.407651178009159\n\n\nIt is necessary to add gem ‘activesupport’ to call blank?.\nhttps://github.com/BoxcarsAI/boxcars/blob/c92c1f29aac6485903731ad8d8a2cbbb1c2a7b24/lib/boxcars/ruby_repl.rb#L22"
  },
  {
    "objectID": "posts/2023-07-21Math/index.html",
    "href": "posts/2023-07-21Math/index.html",
    "title": "高校数学、単元リスト",
    "section": "",
    "text": "高校数学\n\n\n\n\ngraph TB\n  数学1--&gt;数と式\n  数学1--&gt;関数と計算\n  数学1--&gt;二次関数\n  数学1--&gt;データの分析\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学2--&gt;いろいろな式\n  数学2--&gt;図形と方程式\n  数学2--&gt;指数関数ー対数関数\n  数学2--&gt;三角関数\n  数学2--&gt;微分積分\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学3--&gt;極限\n  数学3--&gt;微分法\n  数学3--&gt;積分法\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学A--&gt;図形の性質\n  数学A--&gt;場合の数と確率\n  数学A--&gt;数学と人間の活動\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学B--&gt;数列\n  数学B--&gt;統計的な推測\n  数学B--&gt;数学と社会生活\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学C--&gt;ベクトル\n  数学C--&gt;平面上の曲線と複素数平面\n  数学C--&gt;数学的な表現の工夫\n\n\n\n\n\n大学数学\n\n\n\n\ngraph TB\n  教養数学--&gt;統計学\n  教養数学--&gt;微分積分学\n  教養数学--&gt;線形代数\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学基礎--&gt;論理学\n  数学基礎--&gt;集合論\n  数学基礎--&gt;位相空間論\n\n\n\n\n\n\n\n\n\ngraph TB\n  解析学--&gt;ベクトル解析\n  解析学--&gt;解析学の基礎\n  解析学--&gt;常微分方程式論\n  解析学--&gt;フーリエ変換\n  解析学--&gt;複素数解析学\n  解析学--&gt;ルベーグ積分論\n  解析学--&gt;計算数理\n  解析学--&gt;偏微分方程式論\n  解析学--&gt;関数解析学\n  解析学--&gt;スペクトル論\n  解析学--&gt;確率論\n  解析学--&gt;確率微分方程式論\n\n\n\n\n\n\n\n\n\ngraph TB\n  代数学--&gt;代数学基礎ー群論ー環論\n  代数学--&gt;体論ーガロア理論\n  代数学--&gt;代数的整数論\n  代数学--&gt;ホモロジー代数学\n  代数学--&gt;数論幾何学\n  代数学--&gt;組合せ論\n\n\n\n\n\n\n\n\n\ngraph TB\n  幾何学--&gt;微分幾何学\n  幾何学--&gt;多様体論\n  幾何学--&gt;位相幾何学\n  幾何学--&gt;可微分多様体論\n  幾何学--&gt;リー群論\n  幾何学--&gt;代数多様体論\n  幾何学--&gt;代数幾何学\n  幾何学--&gt;表現論"
  },
  {
    "objectID": "posts/2023-08-05FunctionCall/index.html",
    "href": "posts/2023-08-05FunctionCall/index.html",
    "title": "openai functions",
    "section": "",
    "text": "require \"openai\"\n\nOpenAI.configure do |config|\n  config.access_token = ENV.fetch('OPENAI_ACCESS_TOKEN', nil)\nend\n\nclient = OpenAI::Client.new\n\nresponse = client.chat(\n    parameters: {\n        model: \"gpt-3.5-turbo\", # Required.\n        messages: [{ role: \"user\", content: \"Hello!\"}], # Required.\n        temperature: 0.7,\n    })\nputs response.dig(\"choices\", 0, \"message\", \"content\")\n\nHello! How can I assist you today?"
  },
  {
    "objectID": "posts/2023-08-05FunctionCall/index.html#basic",
    "href": "posts/2023-08-05FunctionCall/index.html#basic",
    "title": "openai functions",
    "section": "",
    "text": "require \"openai\"\n\nOpenAI.configure do |config|\n  config.access_token = ENV.fetch('OPENAI_ACCESS_TOKEN', nil)\nend\n\nclient = OpenAI::Client.new\n\nresponse = client.chat(\n    parameters: {\n        model: \"gpt-3.5-turbo\", # Required.\n        messages: [{ role: \"user\", content: \"Hello!\"}], # Required.\n        temperature: 0.7,\n    })\nputs response.dig(\"choices\", 0, \"message\", \"content\")\n\nHello! How can I assist you today?"
  },
  {
    "objectID": "posts/2023-08-05FunctionCall/index.html#functions",
    "href": "posts/2023-08-05FunctionCall/index.html#functions",
    "title": "openai functions",
    "section": "Functions",
    "text": "Functions\n\ndef get_current_weather(location:, unit: \"fahrenheit\")\n  puts \"#{location}, #{unit}\"\n  # use a weather api to fetch weather\nend\n\nresponse =\n  client.chat(\n    parameters: {\n      model: \"gpt-3.5-turbo-0613\",\n      messages: [\n        {\n          \"role\": \"user\",\n          \"content\": \"What is the weather like in San Francisco?\",\n        },\n      ],\n      functions: [\n        {\n          name: \"get_current_weather\",\n          description: \"Get the current weather in a given location\",\n          parameters: {\n            type: :object,\n            properties: {\n              location: {\n                type: :string,\n                description: \"The city and state, e.g. San Francisco, CA\",\n              },\n              unit: {\n                type: \"string\",\n                enum: %w[celsius fahrenheit],\n              },\n            },\n            required: [\"location\"],\n          },\n        },\n      ],\n    },\n  )\n\nmessage = response.dig(\"choices\", 0, \"message\")\n\nputs message\n\nif message[\"role\"] == \"assistant\" && message[\"function_call\"]\n  function_name = message.dig(\"function_call\", \"name\")\n  args =\n    JSON.parse(\n      message.dig(\"function_call\", \"arguments\"),\n      { symbolize_names: true },\n    )\n\n  case function_name\n  when \"get_current_weather\"\n    get_current_weather(**args)\n  end\nend\n\n{\"role\"=&gt;\"assistant\", \"content\"=&gt;nil, \"function_call\"=&gt;{\"name\"=&gt;\"get_current_weather\", \"arguments\"=&gt;\"{\\n  \\\"location\\\": \\\"San Francisco, CA\\\"\\n}\"}}\nSan Francisco, CA, fahrenheit"
  },
  {
    "objectID": "posts/2023-08-05FunctionCall/index.html#embeddings",
    "href": "posts/2023-08-05FunctionCall/index.html#embeddings",
    "title": "openai functions",
    "section": "Embeddings",
    "text": "Embeddings\n\nresponse = client.embeddings(\n    parameters: {\n        model: \"text-embedding-ada-002\",\n        input: \"The king is naked, the king's ears are donkey ears...\"\n    }\n)\n\nputs response.dig(\"data\", 0, \"embedding\")\n\n-0.0047493386\n-0.016024632\n0.0054733814\n-0.008631102\n-0.002707984\n0.01645842\n-0.024024189\n-0.022403864\n-0.005428727\n-0.011303999\n0.003282115\n-0.00012519244\n0.025759341\n-0.014098103\n-0.00639837\n0.015692912\n0.021344911\n0.008720411\n0.022148695\n-0.00088352367\n-0.008178176\n0.00034288375\n-0.024419703\n0.008401449\n0.01745358\n-0.008407828\n0.014761544\n-0.010500217\n0.014391548\n-0.014901887\n0.0014273532\n0.007865594\n-0.0005888829\n-0.009505056\n-0.028068623\n0.0050427835\n0.0011897269\n-0.016318077\n0.027660351\n-0.009817638\n-0.010870212\n0.00540321\n0.001255114\n0.003266167\n-0.02676726\n0.009128681\n0.014110862\n-0.03733127\n-0.0021322584\n0.013485697\n0.0121460585\n-0.0058880313\n-0.006197424\n0.0041114152\n-0.014289481\n0.01786185\n-0.01754289\n-0.0022805757\n0.0033841827\n-0.0057540676\n0.008847996\n-0.0033363386\n0.0033459074\n-0.009562469\n-0.008509896\n-0.020081824\n0.0033554763\n-0.00839507\n-0.016892208\n0.0025469086\n0.048762854\n0.012809498\n-0.026920361\n-0.030518249\n0.019635277\n0.00016785355\n-0.021179052\n0.018997354\n0.010028154\n0.00051671785\n0.010895729\n-0.040852603\n-0.017721508\n0.02302903\n0.017568406\n0.0064685415\n-5.9107577e-05\n0.0259252\n0.011437964\n-0.02334799\n-0.006870433\n0.0009879837\n0.022863168\n0.004953474\n-0.037254717\n0.0052660564\n0.0042868443\n0.016318077\n-0.005476571\n-0.014468099\n0.006704573\n0.0036074559\n-0.0063696634\n-0.0031896161\n-0.011565548\n0.006691815\n-0.0072021536\n-0.005221402\n-0.00822921\n-0.014978438\n0.01338363\n0.02394764\n0.03164099\n-0.054555196\n-0.0010780903\n-0.024611078\n0.023756262\n0.0009409368\n-0.01903563\n-0.04207742\n0.027890004\n0.016394628\n-0.008688514\n-0.008720411\n0.012362952\n0.010079187\n-0.024840731\n-0.02609106\n-0.030237561\n-0.0061623384\n0.043072578\n-0.0017335564\n0.011903647\n0.025300035\n-0.008203693\n-0.0008300976\n-0.00789749\n0.021000434\n0.012503295\n-1.4751975e-05\n0.0073169796\n0.015054989\n-0.008458862\n-0.0013228933\n0.0017877799\n0.023245923\n0.005112955\n0.012886049\n0.0051990743\n-0.002634623\n0.013779142\n-0.0093264375\n0.04297051\n-0.036616795\n0.017925642\n0.009996257\n-0.014327756\n0.021102501\n0.0057508782\n-0.010047291\n0.001770237\n0.033197526\n0.010946763\n-0.01321777\n0.025478654\n0.029829292\n0.01662428\n0.012783982\n0.0033267697\n0.01171865\n0.017070826\n0.013370872\n-0.0086055845\n0.02184249\n0.008018695\n0.025733823\n-1.4913948e-05\n0.009275404\n-0.005135282\n0.0018404085\n-0.045802888\n0.011858993\n0.01097228\n0.024330392\n-0.006966122\n0.007795422\n-0.008139901\n-0.019265281\n0.0012925919\n0.0020828194\n0.0177853\n0.006615264\n-0.019979756\n-0.0076359413\n-0.66344017\n-0.0048705437\n-0.010238668\n0.01196744\n0.014314998\n-0.0024847111\n-0.0045802887\n0.0047589075\n-0.023003513\n-0.005677517\n-0.007993178\n0.0052309707\n0.020706989\n-0.009103165\n-0.017810818\n-0.013421905\n0.003935986\n-0.01960976\n0.014595684\n0.0032693567\n-0.007572149\n-0.008184555\n0.012273643\n0.0033841827\n0.004296413\n-0.0022502742\n0.024215566\n0.01636911\n-0.01811702\n-0.0010661292\n-0.038989868\n0.0031784526\n0.009875052\n0.010621422\n0.04314913\n-0.01238847\n-0.018333914\n0.01844874\n0.003066816\n0.030314112\n-0.018844252\n0.0023156614\n0.009275404\n-0.020745264\n-0.014149138\n0.012643639\n0.020617679\n-0.015756704\n-0.010009016\n0.0033682347\n-8.2431645e-05\n0.014366032\n-0.0018276501\n0.019048387\n-0.036871962\n0.006076219\n0.029803773\n0.004596237\n-0.0012367737\n0.009166957\n-0.00022925367\n-0.0020812245\n-0.028323792\n0.011782442\n0.0003079973\n0.01671359\n-0.0105831465\n0.024062464\n0.008962821\n-0.026486574\n0.015093264\n0.013779142\n0.0046664085\n0.01579498\n-0.004223052\n0.025504172\n0.00061559596\n-0.017925642\n-0.008981959\n0.0018499774\n-0.013651557\n0.02135767\n-0.022582483\n0.010570388\n0.016267043\n-0.0071000857\n-0.016637038\n0.006487679\n0.011278483\n-0.013485697\n0.0015740755\n0.0227611\n0.002808457\n0.0031561253\n0.019711828\n0.01022591\n-0.01537395\n0.023871088\n0.002068466\n-0.022340072\n0.0024847111\n-0.023194889\n-0.024598321\n-0.0047238218\n0.03490716\n0.03164099\n-0.02584865\n0.012509675\n0.05435106\n-0.013945002\n-0.003199185\n0.019163214\n0.006490869\n0.016024632\n0.012260885\n-0.028323792\n0.018142536\n0.0042900336\n0.019788379\n-0.00805697\n0.016662555\n0.022263521\n0.023654195\n-0.03281477\n-0.0016633848\n0.030033426\n-0.028527927\n-0.022467656\n-0.029114816\n0.0021513961\n0.010251426\n-0.007776284\n0.01553981\n-0.007655079\n0.025657272\n-0.00523416\n0.029293435\n-0.0012128516\n0.020987675\n-0.023169372\n-0.00016645809\n0.0075338734\n0.0089117875\n0.0055722594\n-0.0048992503\n-0.030135494\n-0.018180812\n-0.016751865\n-0.0076168035\n0.0186146\n-0.02533831\n-0.008835237\n-0.010098325\n-0.021982836\n0.025274519\n0.013575006\n-0.030109977\n-0.009894189\n-0.015858771\n-0.00648449\n0.027992072\n0.019137697\n-0.053636584\n-0.009096785\n-0.000507149\n-0.00639837\n0.015922565\n0.02625692\n-0.010034532\n-0.03756092\n0.00019516464\n-0.013141219\n0.012745706\n0.01254795\n-0.027124496\n-0.005706223\n0.0042645168\n-0.03641266\n-0.013970519\n0.015054989\n-0.0050714896\n0.008178176\n-0.020375269\n-0.0116867535\n0.026869327\n0.0017718318\n-0.007074569\n-0.010519355\n-0.026461056\n0.006691815\n-0.04223052\n-0.0073680133\n-0.012369332\n-0.00028706546\n0.032636154\n-0.0029806963\n0.0032565983\n0.022008352\n0.030671349\n0.03133479\n0.002044544\n-0.012937083\n0.01279674\n0.003374614\n0.010270564\n-0.02410074\n-0.0020429492\n-0.007521115\n0.0147360265\n-0.0011554385\n0.0047429595\n-0.0111190025\n0.012917946\n0.008350415\n0.0041783974\n0.03365683\n-0.00032952722\n-0.0012710621\n-0.004915199\n-0.0034384062\n0.0008627912\n-0.0024751422\n-0.007661458\n0.011463481\n-0.016075665\n0.007521115\n0.0013643584\n0.01603739\n-0.016088424\n-0.034039583\n-0.008962821\n-0.007929386\n0.011131761\n-0.006305871\n-0.017721508\n0.0054701916\n0.013893968\n0.0019663984\n0.013472939\n-0.0026489762\n-0.01810426\n0.032636154\n0.0015230417\n0.013804659\n0.009747467\n0.006206993\n0.011488997\n0.022646274\n-0.0041528805\n-0.0068449164\n0.0149656795\n-0.01395776\n-0.014289481\n-0.009568849\n0.022505932\n-0.024355909\n0.01819357\n0.008267486\n0.010691593\n0.02934447\n0.016841173\n-0.012139679\n0.008816099\n-0.0020062686\n0.048150446\n-0.0033459074\n0.0033841827\n-0.0046919254\n-0.0051895054\n0.015003955\n0.00274307\n0.019124938\n0.012860533\n-0.006666298\n0.0012439503\n0.029829292\n-0.00390728\n0.0022630326\n0.017810818\n0.019788379\n0.009517815\n-0.034856126\n0.023156613\n0.009658158\n-0.0015326106\n-0.016356353\n-0.023526609\n0.011125381\n-0.032100298\n0.04738494\n-0.009466781\n0.026971394\n0.013970519\n-0.0048609753\n0.0012407607\n-0.026307955\n0.017644957\n-0.00017104317\n0.013141219\n-0.009926085\n0.0073106005\n-0.0023619109\n-0.00017493051\n0.005600966\n0.019341832\n-0.002891387\n-0.015054989\n-0.0082993815\n0.012898808\n-0.014098103\n-0.011667616\n0.010602284\n0.013102943\n-0.008854374\n0.007655079\n0.018512532\n-0.02618037\n-0.011093485\n0.033120975\n0.015935322\n-0.017377028\n-0.018155295\n0.0012439503\n0.017262204\n0.10512975\n-0.00863748\n0.0085290335\n0.020094583\n0.037867125\n-0.00032753372\n-0.02293972\n-0.027124496\n-0.0035372844\n0.008956443\n-0.0054574334\n-0.0013563843\n0.005798722\n0.010876591\n0.026027268\n-0.020056307\n-0.013830176\n-0.015157056\n-0.0058497563\n-0.00075354683\n-0.03490716\n0.006915088\n-0.0048514064\n0.018078744\n-0.019150456\n-0.026690708\n0.002707984\n0.030441698\n-0.008694894\n-0.020758022\n0.0093264375\n0.0015509509\n0.005030025\n0.00081893394\n-0.007738009\n-0.0053298487\n-0.0060283747\n0.0137919\n0.009441264\n-0.01679014\n0.0096454\n0.0033586659\n0.006385612\n-0.02783897\n0.027047945\n-0.012088645\n-0.015820496\n0.017632198\n-0.019750103\n-0.007769905\n0.03980641\n-0.0035628013\n0.006608885\n-0.017172894\n0.033784416\n0.01745358\n-0.007189395\n0.007974041\n-0.0006040336\n0.018423224\n-0.011788822\n-0.007846456\n-0.00060004654\n-0.00042621247\n-0.016853932\n-0.013115702\n-0.030952036\n0.009485919\n-0.041235358\n0.014914646\n-0.0037414199\n-0.010882971\n-0.02369247\n0.003929607\n-0.011865372\n0.0046919254\n0.007980419\n-0.013766384\n0.0013555869\n0.004503738\n0.0047908034\n-0.0058306186\n-0.01761944\n-0.016637038\n-0.027303115\n0.011858993\n0.00540002\n0.011023314\n-0.04628771\n-0.0023491522\n0.012937083\n0.01728772\n0.003374614\n-0.008937305\n0.0051480406\n-0.024304876\n0.004124174\n0.0020142426\n-0.004239\n-0.0034160789\n0.0062644063\n-0.021561805\n0.004934336\n-0.0009824018\n0.026614157\n-0.016904965\n-0.004809941\n-0.00040687542\n-0.021753183\n-0.0011929164\n-0.012854153\n-0.0006076219\n-0.03447337\n-0.014327756\n-0.0053617447\n0.0049662325\n0.017249444\n0.016343594\n0.009466781\n0.00923075\n-0.0038275395\n-0.023245923\n0.023564884\n0.037254717\n-0.0030731952\n0.02817069\n0.0024942798\n-0.020923883\n-0.01920149\n0.008076108\n0.001928123\n-0.0006674272\n-0.0041592596\n-0.020324234\n-0.022046627\n0.006672677\n-0.016190492\n0.004047623\n-0.025389345\n-0.004503738\n-0.017249444\n-0.022812136\n0.0010661292\n-0.03217685\n-0.023003513\n-0.017989436\n0.0116867535\n-0.0071766363\n-0.032610636\n0.016917724\n-0.024394184\n0.0019185542\n-0.00432512\n0.008095246\n0.013166736\n-0.039500207\n-0.02293972\n-0.0058401874\n0.017734267\n0.008037833\n0.03750989\n0.010028154\n0.033120975\n0.008886271\n-0.015692912\n-0.011163657\n-0.008599205\n-0.015986357\n-0.049222156\n0.00056137244\n0.0068385373\n0.026307955\n0.009843156\n0.02501935\n-0.0007651092\n0.014468099\n0.01146986\n-0.009607124\n-0.023781778\n-0.014263963\n-0.0042804647\n-0.034371305\n0.0042804647\n0.0013117297\n0.00847162\n-0.0050395937\n0.04488428\n0.0016506264\n-0.0058657043\n-0.022212487\n0.0044431356\n-0.026027268\n0.029778257\n0.0010836722\n0.003798833\n0.004644081\n0.005310711\n0.015514293\n-0.0035755597\n0.005926307\n0.011699513\n0.011393309\n-0.009288162\n0.010206772\n-0.016688071\n0.029216884\n-0.014468099\n-0.0029456106\n0.011680375\n-0.034626473\n-0.0011099864\n-0.039985027\n-0.02010734\n-0.04712977\n-0.0140470695\n0.0039870203\n-0.009505056\n0.0011131761\n-0.0075402525\n-0.031181687\n-0.0056296727\n0.005585018\n0.035545085\n-0.012292781\n0.017223928\n-0.0010860643\n-0.02975274\n-0.026103819\n0.027124496\n0.0050714896\n-0.018270122\n0.0028563014\n-0.0041018464\n-0.002318851\n-0.001669764\n0.02367971\n0.008127142\n-0.017568406\n-0.015641877\n0.008414208\n-0.0028690598\n-0.0075593903\n-0.003731851\n-0.008879892\n0.009817638\n0.018308397\n-0.024087982\n-0.025529688\n-0.031360306\n-0.011150898\n-0.02467487\n0.00035424676\n-0.022505932\n-0.0026266489\n-0.002983886\n-0.014621201\n0.010736248\n-0.01878046\n-0.01255433\n0.007840076\n-0.017058067\n0.005827429\n-0.0026984154\n0.014608442\n0.009505056\n-0.018321155\n0.010876591\n-0.012260885\n-0.012777602\n0.027609318\n-0.0015182573\n0.0068768123\n0.012752086\n0.01254795\n0.020094583\n0.02211042\n-0.0041847765\n-0.0033172008\n0.003856246\n-0.018065985\n0.007680596\n-0.0030062133\n-0.023973156\n-0.0025469086\n-0.0045324448\n-0.0086055845\n-0.017849091\n-0.0031545304\n0.018920803\n-0.028094139\n-0.012726569\n0.020604922\n0.0061272527\n0.010500217\n0.016930483\n0.020885607\n0.009817638\n0.012790361\n-0.008567309\n-0.00017243862\n-0.017721508\n0.011297621\n-0.022863168\n-0.005833808\n0.033937518\n-0.025325553\n0.025070384\n-0.039985027\n-0.01969907\n-0.01795116\n0.0042740856\n0.0025963476\n0.0007005195\n-0.010697973\n-0.0011203527\n0.00523416\n0.015667396\n-0.002194456\n-0.036693346\n0.029063784\n0.021829734\n-0.02126836\n0.025631756\n-0.018129779\n-0.012898808\n0.018231846\n0.0014696156\n0.033223044\n-0.03730575\n0.0012495321\n-0.03276374\n0.025083141\n-0.006388801\n-0.02651209\n-0.0031800473\n-0.004809941\n-0.008197314\n0.020324234\n-0.012752086\n-0.0068193995\n0.02559348\n0.017938402\n0.019737344\n0.015999114\n-0.00026972193\n-0.0024974695\n-0.0049247677\n-0.016968759\n-0.037050582\n-0.025708307\n-0.01703255\n0.034728542\n-0.009989878\n-0.016853932\n-0.011897269\n0.016050149\n-0.018665634\n-0.0025660463\n-0.007604045\n0.029472053\n0.01671359\n0.011412446\n0.0063122506\n0.024049707\n0.009919707\n-0.009536953\n-0.029523088\n-0.012707431\n-0.0015573301\n-0.018601842\n-0.0045005484\n0.003929607\n-0.024636596\n0.013626041\n0.010717111\n-0.007993178\n0.010066429\n0.029191367\n-0.007138361\n-0.008745927\n0.009607124\n0.010028154\n0.01638187\n0.007189395\n-0.01679014\n-0.02732863\n-0.011725029\n0.01263088\n0.030594798\n-0.047818728\n0.0072149117\n0.00805697\n-0.013600524\n0.0029567743\n-0.020987675\n-0.004105036\n0.013447422\n-0.0066280225\n0.018920803\n-0.02394764\n-0.018997354\n-0.0015549379\n-0.009798501\n-0.03896435\n-0.004203914\n0.009977119\n-0.026027268\n0.013205011\n-0.0055786385\n-0.028527927\n0.0068130204\n0.0059199277\n7.361036e-05\n-0.020911124\n-0.0008057768\n0.0039615035\n0.009128681\n-0.0242666\n0.010512975\n0.020005273\n-0.01911218\n0.008962821\n-0.002062087\n0.006991639\n-0.005336228\n-0.012509675\n0.007278704\n-0.0072276704\n0.0030349197\n-0.013804659\n-0.030237561\n-0.027226564\n-0.017504614\n-0.015909806\n-0.02218697\n0.013447422\n0.23373507\n-0.020898364\n0.00781456\n0.009766605\n-0.0036170247\n0.009122303\n-0.004586668\n0.0018770891\n-0.0140470695\n0.0020573025\n0.008446104\n0.0049247677\n-0.015731188\n0.005243729\n0.010302461\n-0.017083585\n-0.015118781\n-0.014251205\n-0.01038539\n-0.025159692\n0.0040795193\n-0.0006299492\n-0.01104883\n-0.010978659\n0.02542762\n-0.02244214\n-0.018895287\n-0.002676088\n0.017402546\n0.004717442\n-0.02093664\n-0.0027685869\n-0.0006064258\n-0.033120975\n-0.030237561\n0.009039372\n0.004695115\n0.027634835\n-0.005824239\n0.005782774\n0.04664495\n-0.010142979\n-0.02676726\n-0.016343594\n0.031692028\n0.017900126\n-0.0013484103\n-0.012260885\n-0.020069065\n-0.0014161896\n-0.023054546\n-0.0021083364\n0.009409368\n0.037203684\n0.018168055\n-0.004229431\n0.045190483\n0.020809056\n0.0053585554\n0.0076997336\n0.011642099\n0.030237561\n-0.002267817\n-0.0074190474\n-0.001795754\n0.033682346\n-0.04503738\n0.014748786\n0.006806641\n-0.024470735\n-0.0122226095\n-0.027252082\n0.007910248\n0.0014137974\n-0.018908044\n-0.010755386\n0.024713146\n-0.007763526\n0.011858993\n0.0077507673\n-0.012930704\n-0.023730744\n0.00905851\n0.013460181\n-0.017121859\n-0.022467656\n0.03164099\n0.0037860745\n0.008611964\n0.0064525935\n-0.009766605\n-0.026945878\n0.0008033846\n-0.009951603\n-0.005942255\n0.019188732\n0.004618564\n-0.0033459074\n-0.004912009\n-0.012892429\n0.000590079\n-0.054963466\n0.018129779\n-0.005916738\n0.018933563\n0.016777381\n0.0021705339\n0.008210072\n0.01513154\n-0.02676726\n-0.00028586935\n-0.009505056\n0.0056232936\n-0.0065100067\n0.026486574\n-0.0061432007\n0.011310379\n0.0008859159\n-0.009415747\n0.0023842382\n-0.0018818736\n-0.011782442\n0.0043984805\n0.0064621624\n-0.008458862\n-0.031309273\n0.0030173769\n0.020796297\n-0.0019121749\n-0.018065985\n0.017568406\n-0.03148789\n0.01146986\n0.0055882074\n0.008267486\n0.014238447\n0.012286401\n-0.013881209\n0.0006901532\n0.008745927\n0.008095246\n0.02069423\n0.00656423\n0.016483936\n-0.0022231624\n-0.015259124\n0.014149138\n-0.018589083\n0.0011913216\n0.011112623\n-0.047818728\n-0.012586226\n-0.0010278538\n-0.020541128\n0.031105136\n0.013153978\n-0.0026792777\n-0.019877689\n-9.937648e-05\n0.038607113\n-0.029956875\n0.00017941592\n0.010334357\n-0.01611394\n-0.0042645168\n-0.005377693\n-0.16167526\n-0.01155279\n0.014136379\n-0.014748786\n0.02209766\n-0.008133521\n0.026971394\n0.013332596\n-0.02817069\n-0.019265281\n0.0053489865\n0.023756262\n-0.0242666\n-0.015386709\n0.006806641\n-0.0074509433\n-0.004031675\n-0.013256045\n0.016815657\n0.025185209\n0.0029392312\n-0.0013986467\n0.0007076961\n-0.00013256843\n-0.011814338\n0.004927957\n-0.0071256026\n0.02268455\n-0.0014129999\n-0.018014953\n-0.021778699\n-0.012369332\n0.006296302\n-0.0011067968\n-0.008248348\n0.01537395\n-0.025504172\n0.011323137\n-0.0026250542\n0.020183891\n0.011195553\n0.027303115\n0.02601451\n-0.0048673544\n-0.0020301908\n0.040546402\n0.018920803\n0.01679014\n0.014442583\n-0.023309715\n-0.012184334\n-0.006197424\n0.013205011\n0.0062197517\n0.009619882\n0.031972714\n0.006672677\n0.0054893293\n-0.006749228\n-0.0076486995\n-0.019405626\n-0.023564884\n0.009396609\n-0.032278918\n0.009728329\n0.004797183\n0.0031098758\n0.008541793\n-0.03439682\n0.021804217\n-0.012075887\n-0.022569723\n0.019915964\n-0.03567267\n0.0008061755\n0.006679056\n-0.0467215\n-0.0028148363\n0.018078744\n-0.008560929\n-0.008886271\n0.04297051\n-0.0023985915\n0.016879449\n0.0029743172\n0.007929386\n0.011846235\n-0.005527605\n-0.00789749\n0.018869769\n0.0074062888\n-0.015948081\n-0.021204568\n-0.03449889\n0.014774302\n0.038530562\n0.01869115\n-0.020043548\n-0.009721951\n-0.014404307\n0.010117463\n-0.007833698\n-0.021204568\n0.039500207\n0.025772098\n0.0006140011\n0.001401039\n0.00315772\n0.029216884\n0.021638356\n0.01039177\n0.009721951\n0.0073488755\n0.024279358\n0.0081462795\n0.025670031\n0.0011945113\n-0.01513154\n0.023373507\n-0.016432902\n0.05777033\n-0.007680596\n-0.010768144\n0.0018420033\n-0.016764622\n0.0034671128\n-0.09711743\n-0.037662987\n-0.0009026614\n0.0096326405\n0.0027207427\n0.022977995\n0.003041299\n0.025044866\n-0.0036138352\n0.025389345\n-0.023781778\n-0.032636154\n-0.0012734543\n0.008044212\n0.01254795\n-0.028987233\n-0.009198853\n-0.011488997\n0.0012758465\n0.022378348\n-0.0051384717\n-0.011495377\n-0.0028610858\n-0.0275838\n0.0070171556\n0.001811702\n-0.034703024\n0.026282437\n0.006698194\n-0.0072212913\n-0.0079612825\n-0.016828416\n-0.004628133\n0.0025118229\n-0.029191367\n-0.017007034\n-0.013970519\n-0.0069087087\n0.020553887\n-0.025721066\n0.022263521\n-0.008867133\n0.010723489\n-0.035621636\n0.005227781\n-0.0082228305\n0.0074190474\n0.02533831\n-0.011170036\n0.01064056\n-0.025312794\n0.0039902097\n-0.028043106\n0.00481951\n0.03863263\n-0.011865372\n-0.008267486\n-0.006972501\n0.018869769\n0.00067540124\n0.014621201\n0.007986799\n0.0148125775\n0.015437743\n-0.0032055643\n0.001819676\n-0.008879892\n0.008037833\n-0.0017335564\n-0.008216451\n0.010787282\n0.0023826433\n-0.003581939\n0.011016934\n-0.030212045\n-0.027150013\n-0.015437743\n-0.017147377\n0.01962252\n-0.017772542\n-0.0033809931\n-0.025376586\n0.013677075\n-0.0038434875\n-0.001134706\n0.01162934\n0.0026952256\n-0.017325995\n-0.010040912\n-0.016981516\n-0.003923228\n0.0066535394\n0.001920149\n-0.02824724\n-0.01977562\n0.005518036\n-0.0014385169\n-0.0010860643\n0.020388028\n-0.013243287\n-0.021702148\n-0.021727666\n-0.048431132\n0.012828636\n-0.004886492\n-0.010123841\n-0.010729869\n0.015284641\n0.011750546\n0.011935544\n-0.021753183\n-0.0058497563\n-0.017759783\n0.022072144\n-0.016075665\n0.0161267\n-0.030237561\n0.0013978493\n0.003333149\n-0.010149359\n0.0075083566\n-0.001180158\n0.038530562\n0.034703024\n0.019431142\n-0.006864054\n-0.018065985\n0.0024209188\n0.00174472\n0.0058401874\n-0.00981126\n-0.012063129\n0.020464577\n-0.044578075\n-0.008701273\n0.028221725\n0.003814781\n-0.02735415\n0.0097857425\n0.003798833\n0.00697888\n0.017568406\n-0.003955124\n-0.034779575\n0.003747799\n0.00523416\n-0.019571485\n0.025657272\n-0.014302239\n0.017989436\n0.03582577\n-0.014455341\n0.0077571464\n0.021472497\n-0.008216451\n0.0018675203\n-0.016356353\n-0.009957982\n0.009696433\n-0.0053553656\n0.029216884\n-0.040367782\n0.026792776\n0.024955558\n0.03972986\n-0.013868451\n0.0145063745\n0.03016101\n-0.01994148\n-0.007827318\n-0.016777381\n-0.026639674\n-0.004806752\n-0.019494934\n-0.0033044424\n0.01471051\n0.0065450924\n-0.0044558938\n-0.0037414199\n-0.009951603\n-0.009651778\n0.009396609\n-0.00033909606\n-0.025772098\n-0.011661237\n0.011131761\n0.014901887\n0.008439724\n-0.0037159028\n-0.00090186397\n0.005715792\n0.013345354\n-0.028068623\n0.0050810585\n0.0028563014\n-0.0021498012\n-0.012956221\n0.018423224\n-0.016879449\n-0.004838648\n0.02235283\n0.023641435\n-0.0016362731\n-0.0020652765\n-0.019443901\n-0.008484379\n0.001296579\n0.01280312\n-0.020745264\n-0.01421293\n-0.0017463149\n0.038785733\n0.01870391\n-0.01570567\n-0.0009194069\n0.0108893495\n-0.016318077\n0.0040731397\n-0.01122107\n-0.013345354\n-0.041924316\n0.011406068\n0.014366032\n0.0028036726\n0.017249444\n-0.0057732053\n-7.9055135e-06\n0.012949842\n-0.0032151332\n-0.0015836444\n-0.011016934\n-0.014787061\n0.007680596\n0.009383851\n-0.024394184\n0.0062484583\n-0.010844695\n0.0007080948\n0.005100196\n0.0056743273\n-0.02842586\n0.040750537\n0.0006526752\n-0.0036202143\n0.028272757\n0.0036138352\n0.03107962\n-0.011476239\n-0.0024894956\n-0.003897711\n0.019597001\n0.027711386\n-0.013319837\n0.007278704\n0.005144851\n-0.014761544\n0.01579498\n0.0067173317\n0.02102595\n-0.020158375\n-0.0070299143\n0.02468763\n0.00014881552\n0.022301797\n-0.0079612825\n-0.011080727\n-0.010774524\n0.033860967\n0.017428063\n0.011833476\n-0.031947196\n0.003058842\n0.013728108\n0.010921245\n-0.0053394176\n-0.0034862505\n0.008930925\n0.018716669\n-0.0029408261\n0.00963902\n0.0044718417\n-0.028272757\n0.025733823\n-0.017058067\n-0.006305871\n0.0056807064\n0.01603739\n0.0007531481\n0.0019648036\n-0.019839413\n\n\n\ntext_array = []\n\nDir.glob(\"training_data/*.txt\") do |file|\n  text = File.read(file).dump()\n  text_array &lt;&lt; text\nend\n\n\nembedding_array = []\n\ntext_array.each do |text|\n  response = client.embeddings(\n    parameters: {\n      model: \"text-embedding-ada-002\",\n      input: text\n    }\n  )\n\n  embedding = response['data'][0]['embedding']\n  embedding_hash = {embedding: embedding, text: text}\n  embedding_array &lt;&lt; embedding_hash\nend\n\n[\"\\\"OpenAI is an AGI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\\\"\", \"\\\"OpenAI\\\\u2019s large language models, including the models that power ChatGPT, are developed using three primary sources of information: (1) information that is publicly available on the internet, (2) information that we license from third parties, and (3) information that our users or our human trainers provide.\\\"\"]\n\n\n\nrequire 'csv'\n\nCSV.open(\"embeddings.csv\", \"w\") do |csv|\n  csv &lt;&lt; [:embedding, :text]\n  embedding_array.each do |obj|\n    csv &lt;&lt; [obj[:embedding], obj[:text]]\n  end\nend\n\n[{:embedding=&gt;[-0.008899448, -0.027376896, -0.007327039, -0.015006402, 0.007451005, 0.012050793, -0.00983898, 0.026306875, -0.014092969, -0.011698469, 0.015071647, 0.016976807, 0.0062896395, -0.022209475, 0.0023684017, 0.009852029, 0.018568791, -0.013427467, 0.0036602572, 0.0073988084, -0.015254334, 0.010178255, -0.0129055055, -0.008977743, -0.013727595, 9.162367e-06, 0.016193865, -0.02637212, 0.0054381895, -0.018790625, 0.009029939, 0.0033764404, 0.0006161596, -0.00046283333, -0.0021857151, -0.0012861465, 0.0066745863, -0.006726783, 0.028577408, 0.0021025273, 0.018333908, 0.006759405, 0.004492134, -0.024806235, -0.020591393, 0.010752413, -0.030299881, 0.0066647995, -0.00071851304, 0.0034318988, -0.0124553135, 0.033457752, 0.0034384234, -0.0017567277, -0.012024695, 0.004368168, -0.039851785, 0.03251822, 0.010895953, 0.0042409394, 0.009675867, -0.014301754, -0.025210755, 0.0060025607, -0.013779791, 0.012514034, -0.001074915, 0.012885932, 0.005245716, -0.011228703, 0.02680274, 0.001848071, -0.009010365, -0.013492713, 0.022339964, 0.018790625, -0.003210065, -0.0073139896, -0.008357913, 0.01845135, 0.0011352669, -0.010615398, -0.0033356622, 0.010106485, 0.011776763, -0.020108579, 0.00120459, 0.0049390635, 0.0070986804, -0.012748917, 0.0027500861, -0.010054289, 0.019234292, 0.017381327, -0.03771174, 0.031082826, -0.012468362, 0.01340137, -0.01086333, -0.048438054, -0.009225675, -0.010785036, -0.0063222623, -0.00406804, -0.0082926685, -0.0029507154, 0.008436208, -0.011150409, 0.031056726, 0.010126059, 0.011594077, 0.017029004, -0.0105501525, -0.018921115, -0.013029471, -0.0030485832, 0.021061158, -0.0060743303, -0.019430028, -0.00020185241, 0.03152649, 0.017524868, -0.0013464984, 0.0059992983, 0.0035689138, 0.03439728, -0.020995913, -0.017720602, 0.0018562266, -0.020069432, 0.008070834, 0.012716294, 0.025419539, 0.01188768, -0.023122909, 0.020708835, -0.016833268, 0.0038984022, -0.0018399153, -0.012096465, 0.01278154, 0.00901689, -0.01845135, -0.006857273, -0.027585682, 0.018555742, 0.001129558, -0.0059797247, 0.02500197, 0.024153782, 0.012761966, -0.0055230083, -0.0232273, 0.013479663, 0.021752758, 0.0028120691, -0.008958169, 0.017851094, 0.00092321995, 0.011489684, 0.009571474, 0.012546657, -0.015998129, 0.0061134775, 0.013884184, 0.030978432, 0.02102201, -0.003608061, 0.0021514613, -0.022457406, 0.004795524, 0.045306284, -0.023579624, 0.014106018, 0.0047368035, 0.030404275, 0.01802073, 0.014340901, -0.015097745, 0.019743204, 0.004916228, -0.0021481991, 0.016402649, 0.012846785, 0.01762926, -0.0075358236, 0.009427935, 0.011098213, 0.017250838, -0.012044269, 0.015658854, -0.004570428, 0.023540476, 0.0061624115, -0.6668584, -0.033301163, -0.006625653, -0.015502266, 0.019821499, 0.021269944, 0.015789345, -0.027220307, 0.027794465, 0.029751822, -0.012442265, -0.010824183, -0.027533485, -0.013923331, 0.023162054, -0.019221243, -0.005607827, -0.028159838, -0.0008343233, 0.0047531147, -0.024649646, 0.010158681, -0.007144352, -0.008605845, -0.005134799, 0.012885932, 0.014849813, -0.007881623, -0.027585682, 0.0066778488, -0.0033536046, 0.017250838, 0.019782351, -0.022496553, 0.04619362, -0.0012967489, -0.015058598, 0.018542692, 0.0005235929, 0.027376896, -0.029621333, 0.0036569948, 0.007940344, -0.017864142, -0.0068898955, 0.023801457, 0.029177664, -0.013923331, -0.011646273, 0.00090853975, -0.0010985665, 0.012396593, -0.0011083533, -0.0060253963, -0.0067398315, -0.00031440041, 0.029021077, -0.008853777, 0.004475822, -0.02034346, -0.0024189667, 0.013042521, -0.042539887, -0.0059144795, -0.03113502, 0.009943373, 0.0014125591, 0.006915994, -0.005859021, -0.036276344, 0.026580904, 0.010882904, -0.0061885095, 0.0040549906, -0.003258999, 0.026607003, 0.019299537, 0.0003788301, -0.024493057, -0.0056404495, 0.017733652, -0.022209475, 0.029412547, -0.010243501, 0.02951694, 0.008521026, 0.0038005344, -0.00998252, 0.018490497, -0.006844224, 0.020526148, 0.010432712, -0.0034449478, -0.032727003, 0.005268552, -0.008808105, -0.018829772, -0.010145633, -0.0018774313, -0.012611902, -0.0009917275, -0.0026391693, 0.03116112, 0.016559238, 0.0026277513, 0.032022357, 0.0038005344, 0.0058133495, 0.027429093, -0.030012803, -0.01652009, -0.014771519, -0.0033193508, 0.0046389354, 0.013238256, -0.026724445, -0.014823715, -0.013049045, 0.01845135, -0.018751478, -0.010576251, -0.009558425, -0.007281367, -0.018973311, 0.014171263, 0.01461493, -0.0065538827, -0.024545254, -0.04060863, -0.0006394032, 0.02338389, -0.0069029448, -0.0021579857, -0.002187346, 0.048672937, 0.00040594762, 0.023305595, -0.014132116, 0.010843757, 0.013727595, -0.010648021, -0.0043975282, 0.03742466, 0.0016931136, -0.029882314, -0.011574503, 0.00064592774, -0.0071052047, -0.013584056, -0.007914246, -0.010922051, 0.008984268, -0.019730156, 0.029151566, -0.011228703, -0.02226167, -0.03116112, -0.02936035, 0.01338832, -0.01393638, 0.008279619, 0.0050467183, -0.0142104095, -0.020669688, -0.0088864, -0.007216122, -0.0002966619, 0.042148415, -0.03170918, -0.025419539, 0.019051606, -0.037241973, -0.0076728384, 0.020017235, 0.006234181, 0.025223805, -0.026711395, 0.0011882787, 0.008677615, -0.018216467, -0.009473607, -0.012722819, -0.0039147134, -0.0124031175, 0.009173479, -0.011209129, 0.02459745, 0.023944998, -0.0061297887, 0.0010080388, -0.017394377, 0.05355328, 0.00029523464, 0.030117195, -0.017824996, 0.010837232, 0.004449724, -0.004074564, 0.0068898955, 0.015267382, 0.019456126, 0.0011833853, 0.014719322, -0.0031138284, 0.007914246, -0.006942092, 0.0034873572, -0.01760316, 0.023670968, -0.0027027833, 0.018829772, 0.0047302786, 0.008149128, -0.016611435, 0.0072748424, 0.020460902, -0.023488281, 0.011665846, -0.026659198, 0.024636596, 0.02513246, 0.02361877, -0.0029914936, -0.00030420587, 0.0059014307, 0.0225357, 0.0067137335, 0.02459745, 0.0087950565, -0.024558302, 0.0009150643, 0.009382264, -0.0038527306, 0.013818938, 0.02364487, 0.0013571007, 0.01872538, -0.00996947, 0.0105893, -0.010145633, -0.0028202247, -0.003334031, 0.02595455, -0.026828837, 0.018803673, -0.005806825, 0.02294022, 0.00536642, -0.04974296, 0.0177728, -0.028499113, 0.0053794687, -0.0050401934, -0.0014647553, 0.010967722, -0.019860646, -0.007294416, -0.013792841, 0.003572176, 0.031239413, 0.0027663975, 0.017720602, 0.028733997, 0.002358615, -0.00956495, 0.00034478024, 0.019730156, 0.0059373155, 0.00039228692, -0.0051380615, -0.005855759, -0.008736336, 0.012944653, -0.024140732, 0.02829033, 0.026515659, -0.0098977005, 0.004935801, 0.009538852, 0.019612715, 0.0013204003, -0.03074355, 0.015515314, 0.015371775, 0.021530924, 0.004358381, -0.017929388, 0.011450537, -0.026254678, -0.010158681, -0.000761738, 0.01585459, -0.01435395, 0.021139452, 0.0034677838, 0.016467895, 0.021165552, -0.0091473805, 0.0011809386, -0.032753102, 0.005966676, 0.0041398094, 0.01996504, -0.01816427, 0.004909703, -0.00047139675, -0.013049045, -0.0039766966, -0.022379111, -0.035858776, 0.010895953, -0.007176975, 0.021961542, -0.0037255024, 0.0048281467, -0.005209831, -0.016963758, -0.022888025, -0.00075113564, 0.0029409286, -0.007907721, -0.018999409, -0.017798897, 0.009630195, 0.07417077, -0.0005957705, -0.018594889, 0.007255269, -0.020969816, 0.026032845, -0.018529644, -0.010178255, -0.0053011747, 0.008357913, -0.01627216, -0.0097998325, -0.0043224962, -0.031787474, 0.0036798306, 0.0057252683, -0.016611435, -0.010008617, 0.0008465568, -0.015463118, -0.00070220174, -0.0047987862, -0.0088864, -0.012142137, 0.012487936, -0.024427813, 0.015815442, 0.018138172, -0.029960606, -0.017289985, 0.0089973165, -0.008070834, 0.0029653956, -0.004916228, -0.037085384, 0.007483627, 0.008279619, 0.016624482, 0.0032068028, -0.0052750763, 0.01448444, 0.015750198, -0.020917619, -0.030143294, 0.017133396, -0.012129087, -0.007033435, 0.014523587, -0.01208994, -0.025080264, 0.002125363, -0.02528905, -0.04345332, 0.0022052885, 0.0053762067, 0.040974002, 0.00039391805, -0.006583243, 0.009369214, -0.0423572, -0.01318606, -0.01995199, -0.003934287, -0.0064397035, 0.0033764404, -0.03674611, 0.00659303, 0.0064364416, -0.005859021, 0.015945934, 0.026515659, -0.023279496, -0.04796829, -0.012070366, -0.00499126, -0.015671903, 0.0007576602, -0.010452285, -0.0038918776, 0.035284616, 0.009525803, -0.03254432, -0.012794589, -0.022092033, 0.0058035627, -0.02035651, -0.01911685, -0.020252118, -0.002171035, 0.016480943, 0.0074379556, 0.0027778153, 0.02090457, 0.0015944302, -0.0052489783, 0.010341368, 0.020695785, -0.012011646, -0.013701498, -0.007157401, -0.008690664, -0.014588832, -0.016141668, -0.0019785615, 0.016846318, 0.005232667, 0.018973311, 0.020695785, -0.0074640536, -0.012925079, 0.0051054386, -0.0067398315, 0.029490842, -0.016493993, 0.008821154, -0.0033405556, 0.024205979, 0.015593609, -0.0011866476, -0.02269229, -0.014680175, -0.00047914463, 0.007203073, 0.018007683, 0.008429683, 0.008736336, 0.017094249, -0.016585337, -0.03019549, 0.0036178478, -0.02364487, -0.004224628, -0.0072226464, 0.0009591048, 0.0052555026, -0.019025508, -0.012938128, -0.0040713022, -0.034188498, -0.031865768, -0.010909001, -0.0016376552, 0.017942436, 0.0052033067, 0.0069486164, -0.026346022, -0.009943373, 0.0029360352, 0.0022020263, 0.038755663, -0.025210755, 0.022353014, -0.018099025, -0.0012959333, -0.012474887, -0.021335188, -0.010080387, -0.0058459723, 0.018425252, 0.03384922, 0.026215531, -0.0054512387, 0.014262606, 0.016180815, 0.014288704, -0.0232273, 0.023918899, -0.003146451, -0.0034645214, -0.011032968, 0.004857507, -0.0003199055, 0.021113355, -0.013440516, 0.0020666425, 0.012690196, -0.011946401, -0.026163336, -0.016585337, -0.040243253, -0.0061395755, 0.020473951, 0.008188276, 0.026137237, -0.03210065, -0.01817732, 0.044627734, 0.012240004, 0.01406687, 4.3008328e-07, 0.029543038, 0.01161365, -0.014445293, 0.03390142, 0.003846206, 0.0046650334, -0.00021490146, -0.02403634, 0.015554462, 0.014823715, 0.021922395, 0.019625764, 0.008325291, -0.01351881, -0.012037744, 0.016507043, 0.0012298725, 0.0038820908, 0.0053142235, -0.01996504, 0.0059895115, -0.023396937, 0.0039245, -0.015919834, 0.00070913404, 0.0018872181, -0.0058231363, 0.020969816, -0.002384713, -0.028525213, 0.017851094, -0.010576251, 0.040660825, -0.006208083, 0.035832677, 0.015945934, 0.009656293, -0.027350798, 0.016376551, 0.008697188, 0.0031872292, 0.009317018, 0.0035069308, -0.0038918776, -0.0029001501, -0.0018284974, 0.00043673522, -0.014432244, -0.031317707, 0.01610252, 0.00033805182, -7.7733566e-05, -0.012964226, -0.022379111, -0.013094717, 0.019573567, -0.0017453098, -0.0031448198, 0.017407427, -0.0063614096, 0.006257017, -0.0020046595, 0.008279619, 0.02376231, 0.02364487, 0.0072617936, -0.019612715, -0.00083350774, -0.00079313724, -0.005320748, -0.008403585, 0.004860769, -0.0016482575, 0.01556751, 0.00074950454, 0.017838044, 0.0014215304, -0.0009860185, -0.00921915, 0.024401713, -0.033405554, -0.009186528, -0.018138172, -0.009212626, 0.021296041, -0.021478727, -0.010178255, 0.009121282, -0.026933229, -0.0004885236, 0.019651862, 0.0059471023, -0.015371775, 0.0008045552, 0.013831988, -0.027220307, 0.0013538384, -0.02404939, 0.020839324, 0.00029829302, -0.0011034599, 0.009571474, -0.02662005, -0.018660134, 0.035128027, -0.012285676, 0.0057709403, 0.039564703, -0.020734932, 0.00078661274, -0.0218702, 0.0067137335, -0.019704059, 0.018777575, -0.0061526247, -0.00642013, 0.023814507, -0.008481879, 0.0005855759, -0.021348238, 0.0006369565, 0.028916683, -0.0010577881, 0.008625419, -0.017381327, -0.017459622, -0.0010267968, 0.0065375715, -0.0065897675, 0.017303033, 0.0050238823, -0.007627167, 0.029569136, -0.007894672, 0.025197705, 0.0035656516, 0.032622613, 0.003970172, -0.023879752, -0.04467993, 0.008370962, -0.007509725, -0.0035069308, -0.010119534, -0.0062961644, -0.010256549, -0.025302099, -0.012872883, 0.0012845154, -0.010967722, -0.009284396, 0.008188276, 0.007529299, -0.014941157, 0.0130033735, -0.0030371652, -0.0020731671, 0.0021074207, -0.02813374, -0.0025184657, -0.0087428605, 0.04042594, 0.007000813, -0.029203763, -0.033666536, 0.00167354, -0.0423572, 0.01351881, -0.0046650334, 0.029699625, 0.015828492, 0.017916339, 0.019495273, 0.02034346, 0.009460557, -0.0012567862, 0.014262606, 0.0066354396, -0.0051739463, -0.019756254, -0.015476167, -0.0019524633, -0.010276123, 0.005232667, 0.008605845, -0.014627979, -0.02719421, 0.031082826, 0.0068898955, -0.011385292, 0.005242454, 0.015998129, 0.0036439458, 0.0067855036, 0.020473951, -0.029412547, -0.013701498, 0.01031527, -0.025628325, 0.004557379, -0.011248277, 0.004218104, 0.004583477, 0.019312587, -0.0066289147, 0.007209597, -7.8804e-05, 0.013988576, 0.027350798, 0.00077274814, -0.0031154596, 0.008429683, 0.0016221594, -0.008325291, -0.002696259, 0.0047400654, -0.008625419, -0.008005589, 0.021061158, -0.01667668, 0.013923331, -0.016976807, 0.0045736902, -0.02295327, 0.0002966619, -0.005885119, 0.014380047, -0.025641372, 0.0033177198, -0.0041659074, -0.0018382842, -0.002371664, -0.013740644, 0.0028169625, -0.020069432, -0.023971096, -0.013062094, -0.012050793, -0.0067528808, 0.018007683, -0.011476635, -0.021165552, -0.0024988921, 0.030299881, -0.02254875, 0.010882904, 0.20815836, -0.025367344, -0.017838044, 0.0049488503, -0.03836419, -0.0028871011, 0.023684017, -0.00867109, -0.014262606, 0.007457529, -0.0029131994, 0.012520558, 0.00034457634, -0.007026911, -0.0020796915, -0.036980994, -0.035493404, -0.019351734, 0.0016996381, -0.013988576, 0.028916683, -0.00040064644, -0.015828492, -0.017094249, 0.0043388074, 0.008220898, -0.01243574, -0.007150877, 0.014732372, 0.012448789, -0.015606658, 0.01073284, 0.023514379, -0.006456015, 0.0044464623, -0.017407427, 0.01761621, 0.0016865891, 0.032622613, -0.005134799, 0.030691354, 0.027637877, -0.009715014, -0.006058019, 0.010843757, 0.036693916, -0.013466614, -0.017276935, -0.0038853532, 0.024232076, -0.033301163, -0.009427935, 0.0019263653, 0.036563423, -0.024245126, 0.008625419, 0.005506697, 0.002084585, 0.014654078, 0.012592329, 0.0035101932, 0.022822779, 0.01031527, 0.024519155, -0.022587897, 0.027142014, -0.030639157, 0.016141668, 0.011280899, 0.007633691, -0.00013100018, -0.020852374, -0.02036956, -0.017276935, -0.019743204, -0.015450069, 0.039851785, 0.036824405, 0.004668296, 0.00096318265, 0.009264822, -0.0074966764, -0.026607003, 0.016206915, -0.03625025, -0.028890586, 0.0066778488, 0.00074379554, -0.023305595, -0.013571007, 0.011169982, -0.0047139674, 0.0070725824, -0.010308745, -0.010974247, 0.014627979, 0.03254432, 0.0007107652, -0.0029523463, 0.0036765684, -0.008155653, 0.053344496, 0.014862862, 0.023553526, -0.011665846, 0.03403191, -0.023031564, 0.024819283, 0.008214374, -0.012416166, -0.02485843, -0.029986706, 0.005320748, -0.00963672, 0.0016401018, -0.007829427, -0.006367934, -0.007594544, 0.03225724, -0.0035819628, -0.02404939, -0.009793309, -0.011287424, 0.016233012, -0.0019426766, -0.031213315, -0.021491777, 0.0052033067, -0.022092033, -0.0037874852, 0.010093437, -0.02254875, -0.019012459, 0.01181591, -0.0035428158, 0.0034514724, 0.008736336, 0.024284273, -0.016702777, 0.0024923675, -0.010726315, 0.0064788507, 0.0059014307, -0.020317363, 0.009812882, -0.011678895, 0.037111484, 0.0066387015, -0.012527083, -0.011293949, -0.031787474, -0.012585804, -0.009343117, -0.0057285307, 0.04293136, 0.025210755, -0.004550854, -0.0005558078, 0.002446696, 0.019625764, -0.04180914, -0.0002793311, 0.012664098, 0.012298725, -0.018999409, -0.008299192, -0.16577506, 0.0033568668, 0.020447854, -0.02936035, 0.035989266, 0.0067398315, 0.024754038, -0.0067855036, -0.008723287, 0.009166954, 0.02280973, 0.00017656988, -0.011926827, -0.0018823247, 0.025302099, 0.012063842, -0.0058753323, 0.03703319, 0.019208195, -0.011992073, 0.012507509, -0.014667126, -0.0063124755, -0.012638, 0.022222523, -0.0025135723, -0.00963672, 0.017981583, -0.015985081, -0.009956421, -0.0010276122, -0.01133962, 0.041078392, 0.027089817, 0.014915058, -0.002133519, 0.018647086, -0.014745421, -0.029021077, 0.0013057201, 0.016768023, 0.03891225, 0.020969816, -0.002947453, -0.011450537, 0.00013426245, 0.012207381, -0.007692412, -0.0011148778, -0.022052886, 0.022013739, -0.030117195, 0.011522307, 0.0043975282, 0.008775483, 0.0170812, 0.014445293, -0.0038755664, -0.0051543727, -0.023971096, -0.013159961, -0.011848533, 0.02309681, -0.029490842, 0.010798085, -0.0072617936, -0.017381327, 0.018634036, -0.02146568, 0.025367344, -0.0039962702, 0.0077641816, 0.009989044, -0.0031317708, -0.01735523, 0.0138580855, -0.016350454, 0.021935444, 0.008246996, -0.012422691, 0.0024564827, 0.00057578913, -0.01530653, 0.0053240103, -0.011620174, -0.012311774, 0.012742393, -0.00249563, -0.02171361, -0.021491777, 0.011646273, -0.005832923, -0.027898857, 0.00021714426, -0.004019106, 0.013779791, 0.018216467, 0.0065995543, -0.007555397, -0.01558056, 0.0035297666, -0.0019426766, 0.016233012, -0.0052783387, 0.022927172, 0.01073284, -0.0127554415, -0.008990792, -0.0017893503, -0.013610153, -0.02143958, -0.012174759, -0.0026701607, 0.024232076, -0.014915058, 0.016493993, -0.0131534375, -0.018921115, 0.01869928, 0.009793309, 0.041078392, 0.0030926235, -0.014706274, 0.017472671, -0.013753694, -0.02337084, -0.10355722, -0.018333908, -0.004531281, 0.009303969, -0.011855057, 0.0232273, 0.0012649418, 0.03523242, -0.034318987, 0.0072617936, -0.017916339, -0.03358824, -0.02938645, -0.014366998, 0.0058231363, -0.022444358, -0.026032845, -0.029438645, -0.023240348, 0.003908189, 0.00833834, 0.00566981, 0.035963167, -0.007953393, 0.0027272503, 0.01236397, -0.041313276, 0.011293949, 0.009480131, 0.0041887434, 0.0043224962, -0.025797961, 0.0058459723, -0.030430373, -0.0073727104, -0.0070138616, -0.00047058117, -0.025158558, 0.012794589, -0.012748917, -0.0016539665, 0.016507043, 0.027924957, -0.014406146, -0.0095453765, -0.006240706, 0.020682735, 0.007966442, -0.006335311, -0.03306628, -0.03812931, -0.0069616656, -0.031265512, 0.007203073, 0.008788532, 0.014406146, 0.029673528, 0.0057252683, 0.0051772087, -0.008149128, -0.008919022, -0.004459511, -0.040321548, -0.001266573, 0.0028251181, 0.0066615376, -0.015254334, -0.0046226243, 0.008932071, -0.0138058895, 0.020956766, 0.01338832, 0.00047343565, 0.02446696, -0.011828959, -0.010191304, 0.0017567277, -0.027924957, 0.010471859, -0.008377487, -0.030560864, -0.020839324, -0.0075488724, -0.0129838, 0.0133035015, -0.007542348, -0.025654422, -0.0067137335, 0.014471391, -0.014471391, -0.017798897, 0.017107299, -0.011868106, -0.022874976, -0.018973311, -0.017055102, 0.009486656, -0.02213118, -0.010439236, 0.0135579575, -0.003784223, -0.0035982742, -0.04661119, 0.018686233, -0.011365718, -0.004792262, -0.012709769, -0.025445638, 0.0127032455, -0.0066126036, 0.0016719089, 0.02021297, -0.02350133, 0.0069290427, 0.0056893835, 0.016363502, -0.007940344, -0.007842476, 0.03210065, 0.0052750763, 0.005660023, 0.00519352, -0.0012339503, 0.009715014, 0.029830117, 0.0035558648, -0.0024499581, 0.02350133, -0.034371186, 0.030691354, 0.009121282, -0.006230919, 0.009258297, -0.015985081, -0.014523587, 0.010008617, -0.014641029, 0.002224862, 0.009173479, 0.028029349, 0.009591048, 0.0314221, -0.03839029, -0.02446696, 0.019560518, -0.009375739, -0.02294022, 0.0047270167, 0.0006540834, -0.00839706, 0.02977792, 0.033536047, 0.0013562851, 0.027402995, -0.060025606, -0.026750542, -0.007907721, 0.0020079217, 0.026006747, 0.012742393, 0.006883371, 0.018242564, 0.036511227, -0.004032155, 0.00060392614, -0.0029947557, 0.01556751, 0.02582406, -0.012846785, 0.017681455, 0.01079156, 0.0050238823, -0.026176384, -0.010537104, 0.0016466264, -0.01331655, 0.020878471, 0.002071536, 0.00539578, -0.0020323887, -0.018294761, 0.014719322, 0.0129838, -0.020695785, -0.011783288, 0.0033389244, 0.015345677, 0.02855131, -0.012827211, -0.0010806241, -0.005359895, -0.019012459, -0.023162054, 0.015737148, -0.00021204699, 0.023905851, 0.00676593, -0.0049749482, 0.018203417, 0.0025918665, 0.035702188, 0.026907131, 0.026398217, -0.0039897454, -0.006243968, -0.013375271, -0.031213315, -0.014275655, -0.011731091, -0.02635907, 0.004518232, 0.027142014, 0.02922986, 0.0273247, 0.015645806, 0.013022947, -0.015189088, 0.020434804, 0.016702777, -0.016363502, -0.044471145, 0.007940344, 0.014823715, 0.0070791068, 0.012540132, -0.017851094, 0.030560864, 0.014797617, 0.017250838, -0.0225357, 0.002334148, 0.0041137114, -0.008710237, -0.012729343, -0.00078008824, 0.0013831988, -0.014797617, -0.01556751, -0.014171263, 0.008951644, -0.035728283, 0.061017334, 0.029673528, -0.0043224962, 0.0058133495, 0.00093953125, -0.016063374, 0.005369682, 0.01406687, -0.028760094, -0.009206101, -0.015228235, -0.006142838, 0.004935801, -0.008155653, -0.0034286366, -0.005660023, 0.0017632522, 0.03538901, -0.01071979, -0.012638, 0.038807858, 0.035623893, 0.011502733, 0.0017029004, -0.03304018, -0.009741112, 0.016715826, -0.0029425595, 0.0050369315, -0.032022357, 0.024819283, -0.0066615376, -0.024675744, -0.014836764, -0.006084117, 0.005660023, -0.00232273, -0.011633224, 0.028029349, 0.005966676, -0.011855057, 0.027637877, -0.02172666, -0.03993008, -0.0130555695, 0.02104811, -0.04222671, 0.00016545781, -0.022353014], :text=&gt;\"\\\"OpenAI is an AGI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\\\"\"}, {:embedding=&gt;[0.005546885, 0.0035682102, 0.005672201, -0.033743, 0.002437068, 0.009174456, 0.0023694632, 0.017003413, -0.009807631, -0.04579973, 0.015235797, 0.04268661, -0.013197761, -0.007993846, -2.4282566e-05, 0.019549306, 0.013600091, 0.0020314394, 0.010388043, -0.021264158, 0.016990222, 0.006499947, -0.021686276, -0.017069368, 0.007894913, 0.01036166, 0.013929871, -0.033004295, -0.02138288, -0.014813679, 0.0075519425, 0.005266573, -0.018757837, -0.0073936484, -0.02151479, 0.010421021, 0.0043332977, -0.0029498744, 0.011858858, 0.0028987587, 0.024390465, 0.020459497, 0.010295705, -0.009491043, -0.003937563, 0.00831703, 0.0064372886, -0.004422338, -0.014233268, 0.016897883, 0.0033192271, 0.0359855, -0.0024568546, -0.0039144782, -0.017280428, -0.0002102342, -0.018494014, 0.017385956, 0.021897335, 0.0033686939, 0.0097878445, -0.0023727608, -0.013177974, 0.01982632, -0.0061305943, 0.008983184, -0.007400244, -0.0024321212, 0.011634608, -0.0128152175, 0.01923272, -0.00951083, 0.006358142, -0.004676268, 0.023401128, 0.012340335, -0.0078289565, -0.00945147, -0.024575142, 0.011238873, 0.005134661, -0.01267671, -0.014971972, 0.023335172, 0.0085940445, -0.024284936, 0.021884143, -0.002829505, 0.0071825897, 0.0020660663, 0.015974501, -0.012030343, 0.015671104, 0.0018764433, -0.03767397, 0.011680777, -0.021527981, 0.018085089, -0.018032324, -0.029548211, -0.009504234, 0.001019842, -0.03759482, -0.011225682, -0.024271745, 0.014971972, 0.028044418, -0.010803564, 0.009622956, 4.068135e-05, -0.006021767, 0.028756741, 0.00483786, -0.021475218, -0.019113999, 0.016277898, 0.019681219, -0.010038477, -0.023097731, -0.004079368, 0.012564586, -0.0049203048, -0.00080878334, 0.021198204, 0.017597014, 0.020195674, -0.029258005, -0.017293617, -0.012538203, -0.0031972087, -0.0011138291, 0.01245246, 0.011918218, -0.00027907558, -0.04289767, 0.031210298, -0.014866443, 0.0015615042, 0.0018995279, -0.010585911, 0.0023134006, 0.011482909, -0.0105001675, 0.0053819953, -0.008567662, 0.041209202, -0.0030141813, 0.0097878445, 0.023836436, 0.019852703, 0.023744099, -0.01630428, -0.016713208, 0.015473237, 0.012828409, -0.009589978, 0.01024294, 0.0280708, 0.005322635, -0.015882164, 0.0067274943, 0.018612735, 0.0007997144, -0.008297243, 0.02444323, 0.02727933, 0.026316375, 0.0038979894, -0.012043534, -0.009345941, -0.023295598, 0.02999671, -0.015143458, -0.009464662, -0.004346489, 0.015262178, 0.033400033, -0.0060514472, -0.028492918, -0.011219086, 0.0078817215, 0.009141478, 0.0037232065, -0.009570191, -0.00040727723, -0.026052551, 0.003670442, -0.02511598, 0.015565575, -0.026923168, 0.025762346, 0.0002772206, 0.020103335, -0.031421356, -0.6644126, -0.038201615, 0.008917228, -0.037726734, 0.01663406, 0.01639662, 0.0071364203, -0.016093222, -0.007908104, 0.049598783, -0.00724195, 0.003683633, 0.0006929484, -0.0141145475, 0.015090694, -0.017636588, 0.010599102, -0.029891182, 0.02411345, 0.011449932, -0.024852157, 0.0016423002, -0.0021765423, -0.0069847223, -0.024430038, 0.020406732, -0.01097505, -0.015855782, 0.011245469, 0.014417944, -0.011865454, -0.0050060474, 0.026989125, -0.018494014, 0.039626263, -0.0073936484, -0.0219501, 0.023018584, -0.0025392994, 0.024825774, -0.032846004, -0.0141145475, 0.0071034427, 0.02625042, -0.0093063675, 0.023664951, 0.020446306, -0.000988513, -0.025524905, -0.007367266, -0.0038584159, -0.020301204, 0.015288561, -0.018309338, 0.0064142044, 0.008844676, 0.022477746, -0.01561834, 0.0011336157, -0.01890294, 0.013877106, 0.019193146, -0.03144774, -0.01823019, -0.01573706, 0.0064966492, 0.010394638, 0.011812689, -0.013758386, -0.028361006, 0.01697703, 0.015473237, -0.0020611195, -0.0025937129, -0.029521829, 0.013441797, 0.017874029, -0.004471805, -0.030418828, 0.010473785, 0.005467738, -0.010170389, 0.001549962, -0.015816208, 0.021264158, 0.020960761, 0.0070111044, -0.0070111044, 0.014549855, -0.00079311884, -0.002829505, 0.030920092, -0.012445864, -0.023361554, -0.016911075, 0.0026992422, -0.019404205, -0.026197655, -0.001437837, -0.02035397, 0.003541828, -0.027675066, 0.04266023, 0.012162254, 0.035932735, 0.02014291, -0.019061234, 0.0119775785, 0.0057645394, -0.016040457, -0.008969992, 0.02196329, -0.009834014, -0.0017758607, 0.022306262, -0.021791805, 0.0012218317, -0.0019011768, 0.010849734, -0.016357046, 0.0037166108, -0.0064306934, 0.0053556133, -0.016014075, 0.023348363, 0.021870952, 0.014127738, -0.015156649, 0.003937563, 0.025670009, 0.0023645165, -0.012188637, 0.007776192, -0.019602071, 0.035537, 0.007967464, 0.041235585, -0.006879193, 0.0025838194, -0.0019209635, -0.029442681, 0.0056853923, 0.00053960114, 0.0010544688, -0.03711994, -0.01222821, -0.0002757778, -0.005787624, -0.0023414318, -0.014286032, 0.011865454, -0.0144839, -0.00030236624, 0.023691334, -0.007479391, -0.015565575, -0.011278447, -0.034560855, 0.011291638, -0.010170389, 0.0051775323, 0.017781692, -0.00848192, -0.00011078518, -9.733637e-05, -0.008204905, 0.005708477, 0.022886673, -0.03268771, -0.017029794, 0.021013526, -0.028888652, 0.0073145013, 0.034903824, -0.006559307, 0.022029247, -0.006308675, 0.001493075, 0.013890297, -0.03010224, -0.00083145563, 0.008528088, 0.0026992422, -0.008686382, 0.012149064, 0.0147213405, 0.03281962, 0.038861174, -0.030366063, -0.0029317366, -0.018533587, 0.026553817, -0.006605476, 0.03392768, 0.0091810515, -0.005593054, 0.019166764, -0.003080137, 0.0019737282, 0.013837533, 0.016264707, 0.044506993, 0.006262506, -0.028229095, -0.0036605485, -0.033690237, 0.011383976, -0.032160062, 0.012808622, 0.0015153352, 0.007835552, 0.004679566, -0.012663519, -0.0010948668, 0.010803564, 0.03078818, -0.003874905, 0.01369243, -0.012412887, 0.025524905, 0.008640214, 0.0023579209, 0.03134221, 0.0015977799, -0.011779711, 0.022306262, -0.02251732, 0.027200183, 0.0020825553, -0.028229095, 0.02354623, 0.0010388043, -0.0020198973, 0.015512811, 0.01652853, -0.009847205, 0.019272292, -0.021026717, 0.020657366, -0.00546444, -0.014220077, -0.0056656054, 0.010757395, -0.03326812, 0.042633846, -0.02229307, 0.014497091, -0.015314943, -0.043768287, -0.0054908227, -0.030840944, 0.011674182, -0.016700016, -0.005157746, 0.023915583, -0.0060250647, 0.021739041, -0.008462133, -0.013969445, 0.015855782, -0.009589978, 0.009286581, 0.021475218, 0.0043563824, 0.00815214, -0.004283831, -0.007835552, -0.003050457, -0.0126371365, -0.00090524374, -0.010282514, 0.0084687285, 0.012802026, -0.02636914, 0.029442681, 0.019945042, -0.009834014, -0.0030718928, 0.016172368, 0.04411126, -0.007855339, -0.026501052, 0.0076376847, 0.022662422, -0.00945147, -0.000116865485, -0.021659894, 0.00831703, -0.021303732, -0.0024222278, -0.011628012, 0.0022095202, -0.0054182713, 0.016554913, -0.0019984616, 0.0017907007, 0.0007692098, -0.017385956, -0.008363199, -0.01629109, -0.0068396195, 0.005550183, -0.01766297, -0.0013966147, 0.0298648, -0.007815765, -0.032872386, 0.006354844, -0.010895902, -0.0271738, 0.011364189, 0.015789825, -0.00074365194, -0.033215355, 0.011535674, 0.005527098, -0.004287129, -0.005939322, 0.0014196992, 0.0029762567, -0.0018220297, -0.027886124, -0.014048591, 0.0026926466, 0.0477784, 0.016159179, -0.013652856, 0.0032038044, -0.017583823, 0.0008442346, -0.003587997, -0.005787624, -0.013837533, 0.025933832, -0.011779711, -0.0036803351, 0.010533146, -0.0031526885, 0.003495659, 0.00021662367, -0.0070572738, -0.019377822, -0.027200183, -0.024403656, 0.016515339, -0.010671653, 0.0039078826, 0.0038386292, 0.02093438, -0.010005499, 0.025828302, 0.025551287, -0.0192591, -0.012821813, 0.011054196, -0.0028163139, -0.00461361, 0.0027767404, -0.020736512, 0.029389916, -0.0030784882, 0.0047488194, 0.014022209, 0.019206338, 0.0026003085, 0.0073936484, -0.0063812262, -0.024284936, -0.0063449508, -0.03181709, 0.004933496, 0.023440702, -0.00730131, -0.037647586, -0.00084176124, 0.011720351, -0.03609103, 0.0035781036, 0.014813679, 0.0010874467, 0.005790922, -0.011482909, 0.0035187434, -0.039441586, -0.001708256, -0.026632963, 0.0007168574, -0.0069187665, -0.009260198, -0.003068595, 0.0074200304, 0.0022853694, -0.02638233, 0.017122133, 0.013850723, -0.032555796, -0.060151715, -0.015024737, 0.010757395, 0.003713313, 0.01890294, 0.0106254835, -0.018586352, 0.026830832, -0.0073276926, -0.026118508, -0.0018929322, -0.019997807, 0.00056268566, 0.0063779284, -0.028545681, -0.012208424, 0.013850723, 0.010955263, -0.0010008797, -0.010533146, -0.0140354, -0.003253271, 0.006997913, 0.018124662, 0.028361006, 0.00871936, 0.009187647, -0.011918218, -0.009761463, -0.024073876, -0.020169292, -0.018217, 0.003352205, 0.010902498, 0.019443778, 0.009220624, 0.00803342, -0.006997913, 0.014404753, 0.0012597563, 0.010770586, -0.015446855, 0.001264703, -0.021435644, 0.032107297, -0.001708256, -0.0053391242, -0.025392994, -0.008633618, -0.04015391, 0.02127735, 0.022240305, -0.008587449, 0.0019654837, 0.005642521, 0.007591516, -0.038069703, 0.0063482486, -0.0067604724, 0.023717716, -0.009814227, -0.0070111044, -0.0026151487, -0.019668028, -0.023097731, 0.009339346, -0.024298128, 0.00295647, -0.00043901848, -0.013705621, 0.0063350573, 0.010223153, 0.019219529, -0.020802468, -0.008020229, 0.0035187434, 0.04015391, 0.039072234, -0.008211501, 0.021527981, -0.021211395, -0.017188089, -0.0008322801, -0.014840061, 0.0007865232, 0.022992201, 0.039230525, 0.026593389, 0.032766856, -0.017399147, 0.016159179, 0.031500503, -0.0055238004, 0.0033258225, -0.0001697332, 0.015222605, -0.0047488194, -0.031737946, 0.0025195125, 0.010269322, 0.027305713, -0.007987251, 0.008930419, 0.012465651, -0.009214029, -0.0045740367, -0.008185118, -0.013837533, -0.016264707, 0.023031775, -0.0053556133, 0.027965272, -0.028809506, 0.005075301, 0.014272841, -0.0059261313, 0.0044025513, 0.00904914, 0.023902392, -0.014312414, -0.01596131, 0.017016603, 0.0030587015, -0.017016603, -0.0026118509, -0.0430032, 0.013454989, 0.0056359256, 0.01199077, 0.0140617825, 0.009352536, -0.011159726, 0.011819284, 0.011397167, -0.010111028, 0.005075301, -0.014549855, -0.017623397, -0.021356497, -0.020090146, -0.012465651, 0.0052500837, -0.016607678, 0.008752339, 0.001131967, 0.026698919, -0.012406291, -0.015948119, 0.044981875, 0.0035484235, 0.06247336, 0.009405301, 0.012221615, -0.0009151371, 0.031289443, -0.004442125, 0.009378918, -0.0005734035, 0.008818294, 0.0056787967, -0.00092255714, -0.0040101144, -0.0072485455, 0.027068272, 0.032977913, -0.0125118205, -0.027701447, 0.026210846, 0.015341326, 0.014787297, -0.018243382, -0.027595919, -0.02332198, 0.0010825, 0.0035352323, 0.014919208, -3.3828124e-05, -0.010994837, 0.0023958455, 0.028440153, 0.02738486, 0.007446413, 0.014523474, 0.017610205, 0.0018236786, 0.0023414318, -0.0015128618, -0.0054149735, -0.0067110057, -0.0042574485, 0.0027107846, 0.0024634502, -0.003855118, 0.017623397, -0.0072287587, 0.012261189, 0.0047026505, 0.029521829, -0.030392446, 0.0012276028, -0.014681768, -0.007571729, 0.020670556, -0.020222057, 0.006483458, 0.0099659255, -0.02468067, 0.010599102, 0.034587234, 0.01697703, -0.029970327, 0.0033406627, 0.00267286, -0.021105865, -0.011252064, -0.0026167976, 0.007730023, -0.033663854, -0.009774653, 0.010579315, -0.009425088, 0.00053506665, 0.0015639776, -0.026883595, 0.010315492, 0.046089932, -0.01743872, 0.0106056975, -0.0057216682, 0.013626474, -0.03350556, 0.009550404, 0.0035846992, -0.019100808, 0.017372765, -0.012729474, -0.013613283, -0.010665057, 0.0073276926, 0.01618556, 0.010638675, 0.020736512, 0.017016603, -0.0026992422, 0.009134882, 0.00215016, 0.0238892, 0.018019132, 0.00089370145, -0.027002316, 0.02534023, -0.00670441, 0.014417944, -0.010223153, 0.02342751, -0.0014328903, -0.034270648, -0.024390465, 0.017636588, -0.0030784882, 0.0084159635, -0.015671104, -0.0065988805, 0.0007288119, -0.02398154, 0.013039467, -0.006707708, -0.0065362225, 0.0011402114, 0.025947023, 0.0094844485, -0.0052302973, -0.021343306, 0.0051775323, -0.013257122, -0.004379467, -0.030972857, 0.013177974, -0.0054182713, 0.039758172, 0.008956801, -0.041578554, -0.042739376, -0.009814227, -0.039256908, 0.011463122, -0.00095388613, 0.024126641, 0.013903488, 0.0215016, 0.0064966492, 0.01753106, -0.005075301, 0.002641531, 0.00082939456, 0.009068926, -0.0005457845, -0.009728485, -0.022873482, 0.02557767, -0.0039012872, -0.00062122144, -0.00053341774, -0.02148841, -0.012445864, 0.00034523752, -0.008534684, -0.019681219, 0.0035682102, 0.01640981, 0.00489722, -0.004412445, 0.03020777, -0.02999671, -0.016027266, 0.013995826, -0.0064372886, -0.017544251, -0.0107310135, 0.001169067, 0.020776086, 0.00059401465, -0.00594262, -0.0008030122, -0.009741676, 0.007459604, 0.03577444, 0.005342422, -0.0016282845, 0.014444326, 0.00020394778, -0.0057843262, 0.002733869, 0.011733542, 0.002021546, 0.01561834, 0.031526886, -0.026540626, 0.0024618013, -0.01845444, -0.0044652093, -0.04231726, -0.0124590555, -0.0015623287, 0.004752117, -0.034244265, 0.012360122, 0.011535674, 0.001288612, 0.0056689032, -0.013758386, 0.020380352, -0.024311319, -0.012208424, -0.019865895, -0.023480274, 0.0078025744, 0.01799275, -0.013943062, -0.017689353, 0.019325057, 0.03192262, -0.041947905, 0.01142355, 0.19132467, -0.031869855, 0.0026563709, 0.020406732, 0.0029746077, -0.0006170992, 0.013006489, 0.009095308, -0.007670663, 0.00045179742, -0.011469718, 0.011383976, -0.010440808, -0.004425636, -0.00071809406, -0.026909977, -0.041130055, -0.039362438, -0.0028031226, 0.0051280656, -0.010942072, -0.0076113027, -0.0075189644, -0.020736512, -0.004758713, 0.011951196, -0.008396177, -0.0010165442, 0.008264265, 0.015341326, 0.0013694079, 0.010348469, -0.008132353, 0.018494014, -0.008805103, -0.02308454, 0.0045311656, 0.0041815997, 0.0243377, 0.0019242612, 0.033901297, 0.006321866, 0.0020165995, -0.022781143, 0.007162803, 0.016647251, -0.012353526, -0.015750252, 0.013784768, 0.011489505, -0.02093438, -0.0147741055, 0.013520945, 0.033004295, -0.019206338, 0.022490937, -0.01160163, 0.00014695783, -0.0008648458, 0.0013042765, -0.027121037, 0.008251074, 0.009695507, 0.025590861, -0.016251516, 0.010823351, -0.0070440825, 0.0033769384, 0.01606684, -0.025854684, -0.017254045, -0.011324615, -0.007321097, -0.009919756, -0.03363747, -0.032977913, 0.027543154, 0.030709034, 0.01809828, 0.015948119, -0.0009464661, -0.028941417, 0.015974501, 0.015301752, -0.012472247, -0.044190403, 0.013118614, -0.021923717, -0.003604486, -0.0013471477, 0.004758713, -0.0076442803, 0.0057645394, 0.005507312, 0.008218097, 0.010071455, 0.0097878445, -0.015235797, -0.006846215, 0.0006612072, -0.009708698, 0.06252612, 0.025841493, 0.029495446, 0.0010536443, 0.018256573, -0.008567662, 0.010737609, -0.00018179075, 0.005438058, -0.018573161, -0.027332095, 0.004029901, 0.0077564055, -0.008805103, -0.008725956, -0.008501707, -0.011100366, 0.033215355, -0.00752556, -0.0020842042, -0.016792353, -0.012722879, 0.017161706, 0.012162254, -0.030920092, -0.020327587, -0.012241402, -0.018441249, -0.0010857978, 0.016317472, -0.03168518, 0.0013281854, 0.026065743, -0.011482909, -0.008969992, 0.01210949, 0.002895461, 0.005507312, 0.0040661767, 0.0029432788, 0.0033175782, -0.009068926, -0.027464006, 0.01979994, -0.0059261313, 0.002118831, 0.0012457407, -0.012914151, 0.0023843031, -0.01549962, 0.008580853, -0.006104212, 0.011047601, 0.04266023, 0.009359132, -0.015143458, -0.0077036405, -0.014048591, 0.010737609, -0.03675059, -0.00730131, 0.0015540842, 0.0047422242, -0.009299772, -0.006951744, -0.16736951, 0.0044948896, 0.009530617, -0.044137638, 0.020630984, 0.014325606, 0.03529956, 0.011106961, -0.0020940974, -0.008257669, 0.01855997, -0.018652309, -0.016884692, -0.0026283397, 0.0044322317, 0.008864463, -0.011654395, 0.01890294, 0.022833908, 0.011614821, 0.029231623, -0.014747723, 0.016145987, -0.018124662, 0.0037792688, 0.00568869, -0.020630984, 0.019562498, -0.006058043, -0.039547116, -0.024984067, 0.00012655274, 0.012261189, 0.012399696, 0.033004295, -0.0016744536, 0.03506212, -0.01799275, -0.03126306, 0.009365727, 0.008706169, 0.012927342, 0.022570085, -0.0063944175, -0.002008355, -0.012610754, 0.0007131474, -0.02229307, 0.0069451486, -0.003541828, 0.02421898, 0.0019819727, 0.011192704, -0.0045641433, -0.010572719, 0.018916132, 0.008402772, -0.001485655, -0.0027717936, -0.0063977153, -0.0025376505, -0.01753106, 0.012492034, -0.028018035, 0.0051280656, -0.013237335, -0.029389916, 0.005830495, -0.033690237, 0.03113115, -0.010889308, 0.0038353314, 0.0049862606, -0.018164234, 0.007505773, 0.008613831, -0.017465103, 0.011529079, 0.02817633, -0.0075519425, -0.012129277, -0.0020924485, -0.03113115, 0.00888425, -0.010269322, -0.0119248135, 0.011120153, 0.01788722, -0.028703976, -0.019193146, 0.0071232296, -0.0034198097, -0.009471257, 0.0014666928, 0.01131802, 0.008244478, 0.027226565, -0.0069781267, 0.0089502055, -0.0036638463, -0.0034395964, 0.004633397, -0.006892384, 0.006588987, 0.033400033, -0.0063977153, -0.016462574, -0.0035978905, 0.03126306, -0.0054611424, -0.022715187, -7.4561e-05, -0.0046531837, 0.007815765, -0.027675066, 0.011449932, -0.024007922, -0.033320885, 0.0127624525, 0.0018698478, 0.04674949, -0.00106024, 0.0035187434, 0.030286916, -0.011324615, -0.012182041, -0.11576567, -0.029442681, 0.014655385, 0.016119605, -0.009326154, 0.035167646, 0.0017296916, 0.028915035, -0.03353194, 0.029627359, -0.03485106, -0.010849734, 0.0078817215, -0.0090755215, 0.026105316, -0.009477853, -0.01069144, -0.018731454, -0.024970876, 0.013877106, 0.006767068, -0.0013743546, 0.011298234, -0.022147967, 0.009312963, -0.010401234, -0.035114884, 0.018494014, 0.015420472, -0.011628012, 0.028572064, -0.0341915, -0.007208972, -0.02162032, 0.0010544688, -0.009029353, -0.016792353, -0.026461478, 0.014048591, -0.008587449, 0.00087968586, 0.0027767404, 0.019430587, -0.007116634, -0.013863915, -0.019206338, -0.032977913, 0.035827205, -0.020406732, -0.0271738, -0.031896237, 0.005424867, -0.02738486, -0.007697045, 0.024192598, 0.024654288, 0.006707708, 0.009866992, 0.00546444, -0.020525454, -0.022029247, -0.024390465, -0.01676597, -0.0105529325, 0.008811698, 0.0021584046, -0.011957792, -0.015605149, 0.007927891, -0.02704189, 0.014787297, 0.0044751028, -0.005893153, 0.009530617, -0.017293617, -0.0066318586, -0.0043893605, -0.020644175, 0.0020363862, 0.002498077, -0.0042739375, -0.019417396, 0.011364189, -0.0069187665, -0.0158294, 0.0030240747, 0.0010214909, -0.019654837, -0.016238324, -0.04297682, -0.0076904497, 0.026791258, -0.009233816, -0.024825774, -0.010328683, -0.011792902, -0.010579315, -0.012003961, -0.010572719, 0.0033423116, -0.0027173802, -0.004936794, -0.051551074, 0.011047601, 0.008448942, -0.0045410586, 0.0020297905, -0.026131699, -0.006846215, -0.011298234, -0.0046366947, 0.009266794, -0.01696384, 0.019615263, -0.0073540746, 0.010012095, -0.006687921, -0.00033802362, 0.0112124905, 0.0035978905, 0.015882164, 0.0015062662, 0.021527981, -0.0024634502, 0.030735416, 0.015710678, 0.0028377494, 0.002907003, -0.021712659, 0.047250755, -0.01340882, -0.00018714966, -0.009728485, -0.015262178, 0.0046037165, -0.010236344, 0.0018121364, -0.005830495, -0.0022820716, 0.019325057, 0.016568104, 0.031183915, -0.017742118, -0.04392658, 0.008138949, -0.01979994, -0.006912171, -0.0021913825, -0.0010017041, 0.0033555028, 0.022266688, 0.018876558, 0.031869855, 0.018810602, -0.047461815, -0.030181387, -0.01888975, 0.0054347604, 0.035378706, 0.0049038157, -0.0004876609, 0.014351988, 0.038227998, 0.013534136, 0.011397167, -0.00055567786, -0.000688414, 0.009009566, -0.003571508, 0.013085636, 0.012716284, -0.015130267, -0.009141478, 0.0036407616, 0.008138949, 0.009286581, 0.0020281416, 0.008429155, 0.007795979, 0.01460262, -0.0038485224, 0.02830824, 0.016014075, -0.011693968, -0.00922722, 0.006730792, 0.023691334, 0.009220624, 0.00023331874, 0.0025755751, -0.026738493, -0.018467631, -0.0022392003, 0.017504677, 0.018929323, 0.0069253617, 0.0030471592, 0.003383534, -0.0048576468, 0.0037232065, 0.01415412, 0.023176879, 0.02841377, -0.013448393, -0.0030784882, -0.00786853, -0.033690237, -0.012505225, -0.027305713, -0.023559421, 0.005754646, 0.021923717, 0.019681219, 0.016673634, 0.012056725, 0.0125843715, -0.0177685, 0.037410144, -0.0022688804, -0.008646809, -0.034798294, 0.00034255808, 0.030366063, 0.008969992, 0.013560519, -0.025894258, 0.03791141, 0.015644722, 0.03023415, -0.029548211, 0.02387601, 0.012221615, -0.024007922, -0.017293617, -0.004138728, -0.0067604724, -0.03440256, -0.004692757, -0.037040792, 0.021593938, -0.017966367, 0.0762977, 0.01979994, 0.009082117, 0.02162032, -0.0026514244, -0.0019077723, 0.019113999, 0.005154448, -0.01036166, -0.0018583054, -0.0064076087, -0.0015483131, -0.013784768, -0.022253497, -0.0043365955, -0.018032324, 0.0018451143, 0.017583823, -0.010401234, -0.0052138083, 0.028440153, 0.022464555, 0.016845118, -0.01301968, -0.021092674, -0.0008994726, 0.016739588, -0.013356055, 0.00013283917, -0.02330879, 0.03532594, 0.014220077, -0.024825774, -0.01764978, -0.02115863, 0.017174898, -0.009095308, -0.016027266, 0.004851051, 0.0077564055, 0.0051445547, 0.0067208987, -0.016475765, -0.020842042, -0.014840061, 0.0035846992, -0.023493465, -0.008059802, -0.025604052], :text=&gt;\"\\\"OpenAI\\\\u2019s large language models, including the models that power ChatGPT, are developed using three primary sources of information: (1) information that is publicly available on the internet, (2) information that we license from third parties, and (3) information that our users or our human trainers provide.\\\"\"}]\n\n\n\nrequire 'cosine_similarity'\n\nquestion = \"What is open AI\"\n\nresponse = client.embeddings(\n  parameters: {\n    model: \"text-embedding-ada-002\",\n    input: question\n  }\n)\n\nquestion_embedding = response['data'][0]['embedding']\n\nsimilarity_array = []\n\nCSV.foreach(\"embeddings.csv\", headers: true) do |row|\n  text_embedding = JSON.parse(row['embedding'])\n  similarity_array &lt;&lt; cosine_similarity(question_embedding, text_embedding)\nend\n\nindex_of_max = similarity_array.index(similarity_array.max)\noriginal_text = \"\"\n\nCSV.foreach(\"embeddings.csv\", headers: true).with_index do |row, rowno|\n  if rowno == index_of_max\n    original_text = row['text']\n  end\nend\n\nprompt =\n\"You are an AI assistant. You work for Sterling Parts which is a car parts online store located in Australia.\nYou will be asked questions from a customer and will answer in a helpful and friendly manner.\n\nYou will be provided company information from Sterline Parts under the [Article] section. The customer question\nwill be provided unders the [Question] section. You will answer the customers questions based on the article.\nIf the users question is not answered by the article you will respond with 'I'm sorry I don't know.'\n\n[Article]\n#{original_text}\n\n[Question]\n#{question}\"\n\nresponse = client.completions(\n  parameters: {\n    model: \"text-davinci-003\",\n    prompt: prompt,\n    temperature: 0.2,\n    max_tokens: 500,\n  }\n)\n\nputs response['choices'][0]['text']\n\n?\n\nOpenAI is an AGI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity."
  },
  {
    "objectID": "posts/2023-07-15intorductionRbProb/index.html",
    "href": "posts/2023-07-15intorductionRbProb/index.html",
    "title": "rb_prob",
    "section": "",
    "text": "https://github.com/geeknees/rb_prob\nIt’s not ideal, but to quickly fix the ‘method missing’ issue, I’ve added the code below.\nhttps://github.com/geeknees/rb_prob/blob/master/lib/prob.rb#L251\n\nrequire 'rubygems'\nrequire 'bundler/setup'\n\nrequire 'prob'\ninclude Probably\n\n# Alarm example from \"Artificial Intelligence - A Modern Approach\" by Russel\n# and Norvig Page 493 cc.\n#\n# Suppose you have a new fairly reliable burglar alarm at home but occasionally\n# it responds to minor earthquakes. You also have two neighbors John and Mary,\n# who have promised to call you at work when they hear the alarm. John always\n# calls when he hears the alarm, but sometimes confuses the telephone ringing\n# with the alarm and calls then, too. Mary, on the other hand, is too much in\n# loud music and sometimes misses the alarm altogether.\n#\n# So the bayesian network will be:\n#\n#           B         E\n#            \\       /\n#            _\\|   |/_\n#                A\n#             /    \\\n#           |/_    _\\|\n#          J          M\n#\n#  with probabilities:\n#  P(B) = 0.001\n#  P(E) = 0.002\n#\n#  P(A| B=true, E=true)   = 0.95\n#  P(A| B=true, E=false)  = 0.94\n#  P(A| B=false, E=true)  = 0.29\n#  P(A| B=false, E=false) = 0.001\n#\n#  P(J| A=true)  = 0.9\n#  P(J| A=false) = 0.05\n#\n#  P(M| A=true)  = 0.7\n#  P(M| A=false) = 0.01\n#\n#  where B = burglar, E = earthquake, A = alarm, J = John calls and\n#  M = Mary calls\n#\n#  ----------------------------------------------------------------------------\n#\n#  Next we want to develop some 'equivalent' functions for querying that\n#  network and do some benchmarks.\n#\n\n# first let's encode the probabilities from the network\n# P(B)\nPBurglary = choose(0.001,  :B, :notB )\n\n# P(E)\nPEarthquake = choose(0.002,  :E, :notE)\n\n# P(A|B = b,E = e)\ndef p_alarm(b, e)\n    pAlarmTable = {\n        [:B, :E] =&gt; 0.95,\n        [:B, :notE] =&gt; 0.94,\n        [:notB, :E] =&gt; 0.29,\n        [:notB, :notE] =&gt; 0.001\n    }\n\n    choose(pAlarmTable[[b, e]],  :A, :notA)\nend\n\n# P(J|A = a)\ndef p_john(a)\n    choose( a == :A ? 0.9 : 0.05, :J, :notJ)\nend\n\n# P(M|A = a)\ndef p_mary(a)\n    choose( a == :A ? 0.7 : 0.01, :M, :notM)\nend\n\n# computes the joint probability and transform result using block (if given)\n# allowing to do some marginalization over one random variable by\n# \"leaving it out\"\n#\n# for example:\n# mk_joint_p {|b,e,a,j,m| [b,e,a]} will find P(b,e,a) = Sum(j,m) { P(b,e,a,j,m) }\n#\ndef mk_joint_p(&blk)\n    PBurglary.dep { |b|\n        PEarthquake.dep {|e|\n            p_alarm(b, e).dep {|a|\n                p_john(a).dep { |j|\n                    p_mary(a).dep {|m|\n                        mk_const(if blk then blk.call([b,e,a,j,m])\n                                else [b,e,a,j,m] end)\n                    }\n                }\n            }\n        }\n    }\nend\n\n# compute (optionally conditional) joint probability of (free) random\n# variables like mk_joint_p.\n#\n# To compute conditional probability set random variables to a known state.\n# for example\n# mk_joint_p2( {:john = :J, :mary = :M} )\n# will compute\n# P(B,E,A| J = true, M = true)\n#\n# or\n# mk_joint_p2({:john = :J, :mary = :M}) {|b,e,a,j,m| b} will find\n# P(B | J = true, M = true)\ndef mk_joint_p2( tsts = {}, &blk )\n    PBurglary.dep { |b|\n    condition(!tsts[:burglary] || tsts[:burglary] == b) {\n        PEarthquake.dep {|e|\n        condition(!tsts[:earthquake] || tsts[:earthquake] == e) {\n            p_alarm(b,e).dep {|a|\n            condition(!tsts[:alarm] || tsts[:alarm] == a) {\n                p_john(a).dep {|j|\n                condition(!tsts[:john] || tsts[:john] == j) {\n                    p_mary(a).dep {|m|\n                    condition(!tsts[:mary] || tsts[:mary] == m) {\n                        mk_const(if blk then blk.call [b,e,a,j,m] else [b,e,a,j,m] end)\n                    }}\n                }}\n            }}\n        }}\n    }}.normalize\nend\n\n# like mk_joint_p2, but using event_dep directly instead of mixing in\n# condition-statements\ndef mk_joint_p3 (tsts = {}, &blk)\n    tst_b = if_just tsts[:burglary]\n    tst_e = if_just tsts[:earthquake]\n    tst_a = if_just tsts[:alarm]\n    tst_j = if_just tsts[:john]\n    tst_m = if_just tsts[:mary]\n\n    PBurglary.event_dep(tst_b) {|b|\n        PEarthquake.event_dep(tst_e) {|e|\n            p_alarm(b,e).event_dep(tst_a) {|a|\n                p_john(a).event_dep(tst_j) {|j|\n                    p_mary(a).event_dep(tst_m) {|m|\n                        mk_const(if blk then blk.call [b,e,a,j,m] else [b,e,a,j,m] end)\n                    }\n                }\n            }\n        }\n    }.normalize\nend\n\n# precompute joint probability to do bayesian inference using filter, map and\n# query?\nPJoint = mk_joint_p\n\nputs 'P(B|M=true, J=true) :'\nputs mk_joint_p3({:mary =&gt; :M, :john =&gt; :J}) {|b,e,a,j,m| b }\n\n# puts \"\\njoint probability:\"\n# puts \"==================\"\n# puts PJoint\n\n# compute P(B | M=true, J=true, E=false, A=true) using all 3 different\n# functions mk_joint_p, mk_joint_p2 and mk_joint_p3:\nputs \"\\nP(B | M=true, J=true, E=false, A=true)\"\nputs \"=====================================\"\nputs mk_joint_p2({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\nputs mk_joint_p3({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.probability(:B)\nputs PJoint.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A }.query? {|b,e,a,j,m| b == :B }\n\n# do some benchmarking:\n\nrequire 'benchmark'\n\nBenchmark.bmbm {|x|\n    i = 1000\n    x.report('joint probability:') {\n        (1..i).each {\n            mk_joint_p.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A }.query? {|b,e,a,j,m| b == :B }\n        }\n    }\n\n    x.report('joint probability precomputed:') {\n        (1..i).each {\n            PJoint.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A}.query? {|b,e,a,j,m| b == :B}\n        }\n    }\n\n    x.report('direkt:') {\n        (1..i).each {\n            mk_joint_p {|b,e,a,j,m|\n                if e == :notE && j == :J && m == :M  && a == :A\n                    [b,a]\n                else\n                    nil\n                end\n            }.query? {|b,a| b == :B}\n        }\n    }\n\n    x.report('direkt with conditions:') {\n        (1..i).each {\n            mk_joint_p2({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\n        }\n    }\n\n    x.report('direkt with event condition:') {\n        (1..i).each {\n            mk_joint_p3({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\n        }\n    }\n}\n\nP(B|M=true, J=true) :\nB : 28.41718353643929 %\nnotB : 71.58281646356072 %\n\nP(B | M=true, J=true, E=false, A=true)\n=====================================\n0.4847859721505931\n0.4847859721505931\n0.484785972150593\nRehearsal ------------------------------------------------------------------\njoint probability:               0.152755   0.000523   0.153278 (  0.153251)\njoint probability precomputed:   0.004824   0.000106   0.004930 (  0.004915)\ndirekt:                          0.071230   0.000220   0.071450 (  0.071437)\ndirekt with conditions:          0.019523   0.000055   0.019578 (  0.019565)\ndirekt with event condition:     0.020049   0.000129   0.020178 (  0.020144)\n--------------------------------------------------------- total: 0.269414sec\n\n                                     user     system      total        real\njoint probability:               0.139036   0.000281   0.139317 (  0.139293)\njoint probability precomputed:   0.004490   0.000101   0.004591 (  0.004562)\ndirekt:                          0.070554   0.000181   0.070735 (  0.070704)\ndirekt with conditions:          0.019188   0.000169   0.019357 (  0.019327)\ndirekt with event condition:     0.019695   0.000082   0.019777 (  0.019746)\n\n\n[#&lt;Benchmark::Tms:0x0000000104fde170 @label=\"joint probability:\", @real=0.13929300001473166, @cstime=0.0, @cutime=0.0, @stime=0.00028100000000000347, @utime=0.13903599999999994, @total=0.13931699999999994&gt;, #&lt;Benchmark::Tms:0x00000001062dfe68 @label=\"joint probability precomputed:\", @real=0.004562000016449019, @cstime=0.0, @cutime=0.0, @stime=0.00010099999999998999, @utime=0.004489999999999994, @total=0.004590999999999984&gt;, #&lt;Benchmark::Tms:0x00000001061701e0 @label=\"direkt:\", @real=0.07070399998337962, @cstime=0.0, @cutime=0.0, @stime=0.0001810000000000006, @utime=0.070554, @total=0.070735&gt;, #&lt;Benchmark::Tms:0x0000000104fdc780 @label=\"direkt with conditions:\", @real=0.019327000016346574, @cstime=0.0, @cutime=0.0, @stime=0.0001689999999999886, @utime=0.019187999999999983, @total=0.01935699999999997&gt;, #&lt;Benchmark::Tms:0x0000000104fd6650 @label=\"direkt with event condition:\", @real=0.019746000005397946, @cstime=0.0, @cutime=0.0, @stime=8.199999999999874e-05, @utime=0.019694999999999907, @total=0.019776999999999906&gt;]"
  },
  {
    "objectID": "posts/2023-07-30Math/index.html",
    "href": "posts/2023-07-30Math/index.html",
    "title": "2進数、連立方程式",
    "section": "",
    "text": "2進数\n\ndef decimal_to_binary(target)\n  remainders = []   # List to store remainders\n\n  # Until the quotient becomes 0 during division\n  while target != 0\n    remainders &lt;&lt; target % 2   # Remainder\n    target = target / 2   # Quotient\n  end\n\n  remainders.reverse()   # Reverse the elements in the list\nend\n\n:decimal_to_binary\n\n\n\np decimal_to_binary(65)\n\n[1, 0, 0, 0, 0, 0, 1]\n\n\n[1, 0, 0, 0, 0, 0, 1]\n\n\n\ndef binary_to_decial(target)\n  raise ArgumentError if target.to_s =~ /[^01]/\n  target\n    .digits\n    .each_with_index\n    .sum { |digit, index| digit * 2**index }\nend\n\n:binary_to_decial\n\n\n\np binary_to_decial(1001)\n\n9\n\n\n9\n\n\n\n\n連立方程式\n\nrequire \"charty\"\nrequire \"datasets\"\nrequire \"numo/narray\"\n\nfalse\n\n\n\ncharty = Charty::Plotter.new(:gruff)\n\n#&lt;Charty::Plotter:0x0000000104f32758 @backend=#&lt;Charty::Backends::Gruff:0x0000000104f32668 @plot=Gruff&gt;&gt;\n\n\n\\[\ny = -2/3 x + 6\n\\] \\[\ny = 1/2 x + 2\n\\]\n\nscatter = charty.scatter do\n  series -10..10, (-10..10).map{|x| x/2.to_f * -3 + 6 }, label: 'sample1'\n  series -10..10, (-10..10).map{|x| (x/2.to_f) + 2 }, label: 'sample2'\n  range x: -10..10, y: -10..10\n  xlabel 'x'\n  ylabel 'y'\nend\nscatter.render(\"sample_images/1.png\")\n\n\n\n\n\\[\n2/3 x + y = 6\n\\] \\[\n-1/2 x + y = 2\n\\]\n\nrequire 'matrix'\n\na = Matrix[[2/3.to_f, 1],[-1/2.to_f, 1]]\nb = Vector[6,2]\na.lup.solve(b)\n\nVector[3.4285714285714284, 3.7142857142857144]\n\n\n\n\\[\ny = - 1/2x + 1/2\n\\] \\[\ny = -1/3 x\n\\]\n\nscatter = charty.scatter do\n  series -10..10, (-10..10).map{|x| x/-2.to_f + 1/2.to_f }, label: 'sample1'\n  series -10..10, (-10..10).map{|x| (x/-3.to_f)}, label: 'sample2'\n  range x: -10..10, y: -10..10\n  xlabel 'x'\n  ylabel 'y'\nend\nscatter.render(\"sample_images/2.png\")\n\n\n\n\n\\[\nx + 2y = 1\n\\] \\[\nx + 3y = 0\n\\]\n\nrequire 'matrix'\n\na = Matrix[[1.0, 2.0],[1.0, 3.0]]\nb = Vector[1.0, 0.0]\na.lup.solve(b)\n\nVector[3.0, -1.0]\n\n\n\\[\nx = 3, y = -1\n\\]\n\n\\(2x + 4y - 2z = 4\\)\n\\(2x + y + z = 7\\)\n\\(x + y + z = 6\\)\n\nrequire 'matrix'\n\na = Matrix[[2, 4, -2],[2, 1, 1],[1, 1, 1]]\nb = Vector[4,7,6]\na.lup.solve(b)\n\nVector[(1/1), (2/1), (3/1)]\n\n\n\\[\nx = 1, y = 2, z = 3\n\\]"
  },
  {
    "objectID": "posts/2023-07-23Math/index.html",
    "href": "posts/2023-07-23Math/index.html",
    "title": "数学2、指数関数、対数関数、三角関数",
    "section": "",
    "text": "require \"charty\"\nrequire \"datasets\"\nrequire \"numo/narray\"\n\nfalse\n\n\n\n{\n  charty: Charty::VERSION,\n  datasets: Datasets::VERSION,\n  numo_narray: Numo::NArray::VERSION\n}\n\n{:charty=&gt;\"0.2.12\", :datasets=&gt;\"0.1.7\", :numo_narray=&gt;\"0.9.2.1\"}\n\n\n\nCharty::Backends.use(:plotly)\n\n:plotly\n\n\n\npenguins = Datasets::Penguins.new\n\nplot = Charty.scatter_plot(data: penguins, x: :body_mass_g, y: :flipper_length_mm, color: :species)\n\n\n  \n  \n  \n  \n\n\n\n\nsin-cos-tan\n\ncharty = Charty::Plotter.new(:gruff)\n\n#&lt;Charty::Plotter:0x000000010630fb68 @backend=#&lt;Charty::Backends::Gruff:0x000000010630fa00 @plot=Gruff&gt;&gt;\n\n\n\ncurve = charty.curve do\n  function {|x| Math.sin(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/sin.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.cos(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/cos.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.tan(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/tan.png\")\n\n\n\n\n\n\nsqurt-log\n\ncurve = charty.curve do\n  function {|x| Math.log(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.log2(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log2.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.log10(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log10.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.sqrt(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/sqrt.png\")\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.exp(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/exp.png\")"
  },
  {
    "objectID": "posts/2023-07-15langchainrb/index.html",
    "href": "posts/2023-07-15langchainrb/index.html",
    "title": "langchainrb",
    "section": "",
    "text": "https://github.com/andreibondarev/langchainrb\n\np ENV['RUBYINSPECT']\n\n\"1\"\n\n\n\"1\"\n\n\n\nrequire 'langchain'\n\nopenai = Langchain::LLM::OpenAI.new(api_key: ENV[\"OPENAI_API_KEY\"])\n\nchat = Langchain::Conversation.new(llm: openai)\nchat.set_context(\"You are a chatbot from the future\")\n\nputs \"Welcome to the chatbot from the future!\"\n\nputs chat.message('hey there!')\n\nWelcome to the chatbot from the future!\nHello! How can I assist you today?"
  },
  {
    "objectID": "posts/2023-07-14introductionDaru/index.html",
    "href": "posts/2023-07-14introductionDaru/index.html",
    "title": "Daru",
    "section": "",
    "text": "https://github.com/SciRuby/daru\nTo plot the graph, it is necessary to add gem ‘daru-view’.\nIt also requires adding gem ‘matrics’. After the PR below is merged, it will be resolved. https://github.com/SciRuby/daru/pull/541\n\nrequire 'daru'\n\n\n\n\ntrue\n\n\n\ndf = Daru::DataFrame.new({\n    a: Array.new(100) {|i| i},\n    b: 100.times.map{rand}\n  })\n  df.plot type: :scatter, x: :a, y: :b\n\n\n\n\n\n\ndf = Daru::DataFrame.new({\n    :temperature =&gt; [30.4, 23.5, 44.5, 20.3, 34, 24, 31.45, 28.34, 37, 24],\n    :sales       =&gt; [350, 150, 500, 200, 480, 250, 330, 400, 420, 560],\n    :city        =&gt; ['Pune', 'Delhi']*5,\n    :staff       =&gt; [15,20]*5\n    })\n  df\n\n Daru::DataFrame(10x4) \n\n\n\n\n\ntemperature\nsales\ncity\nstaff\n\n\n\n\n0\n30.4\n350\nPune\n15\n\n\n1\n23.5\n150\nDelhi\n20\n\n\n2\n44.5\n500\nPune\n15\n\n\n3\n20.3\n200\nDelhi\n20\n\n\n4\n34\n480\nPune\n15\n\n\n5\n24\n250\nDelhi\n20\n\n\n6\n31.45\n330\nPune\n15\n\n\n7\n28.34\n400\nDelhi\n20\n\n\n8\n37\n420\nPune\n15\n\n\n9\n24\n560\nDelhi\n20\n\n\n\n\n\n\ndf.plot(type: :scatter, x: :temperature, y: :sales) do |plot, diagram|\n    plot.x_label \"Temperature\"\n    plot.y_label \"Sales\"\n    plot.yrange [100, 600]\n    plot.xrange [15, 50]\n    diagram.tooltip_contents([:city, :staff])\n    diagram.color(Nyaplot::Colors.qual) # set the color scheme for this diagram. See Nyaplot::Colors for more info.\n    diagram.fill_by(:city) # Change color of each point WRT to the city that it belongs to.\n    diagram.shape_by(:city) # Shape each point WRT to the city that it belongs to.\n  end"
  },
  {
    "objectID": "posts/2023-07-17eth/index.html",
    "href": "posts/2023-07-17eth/index.html",
    "title": "eth",
    "section": "",
    "text": "https://github.com/q9f/eth.rb\nIt should be noted that using gem 'eth', github: 'q9f/eth.rb' can fix the error of undefined method 'bytesize' for :inspect:Symbol. The following PR addresses the issue of the overridden send method.\nhttps://github.com/q9f/eth.rb/issues/171\n\np ENV['RUBYINSPECT']\n\n\"1\"\n\n\n\"1\"\n\n\n\nrequire 'eth'\n\ntrue\n\n\n\nclient = Eth::Client.create \"https://mainnet.infura.io/v3/#{ENV['INFURA_ACCESS_TOKEN']}\"\n\n#&lt;Eth::Client::Http:0x0000000100e12138 @id=0, @max_priority_fee_per_gas=0.101e10, @max_fee_per_gas=0.4269e11, @host=\"mainnet.infura.io\", @port=443, @ssl=true, @uri=#&lt;URI::HTTPS https://mainnet.infura.io/v3/8581de3fa5864370b0b1a877ba8564b9&gt;&gt;\n\n\n\nname = \"DAI\"\nabi = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]'\naddress = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\ndai = Eth::Contract.from_abi(name: name, address: address, abi: abi)\n\n#&lt;Eth::Contract::DAI:0x0000000104f0f438&gt;\n\n\n\nclient.call(dai, \"name\")\n\n\"Dai Stablecoin\"\n\n\n\nclient.call(dai, \"symbol\")\n\n\"DAI\"\n\n\n\nclient.call(dai, \"decimals\")\n\n18\n\n\n\nclient.call(dai, \"totalSupply\")\n\n4276851325257585597937104660\n\n\n\nclient.call(dai, \"balanceOf\", \"0x9a315bdf513367c0377fb36545857d12e85813ef\")\n\n0"
  }
]